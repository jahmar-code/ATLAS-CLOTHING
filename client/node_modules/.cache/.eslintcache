[{"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/index.js":"1","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/App.js":"2","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Layout.js":"3","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/context/StateContext.js":"4","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Footer.js":"5","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Navbar.js":"6","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/product/[slug].js":"7","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/contact/Contact.js":"8","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/home/Home.js":"9","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/about/About.js":"10","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/clothing/Clothing.js":"11","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/index.js":"12","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/lib/client.js":"13","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Cart.js":"14","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/FooterBanner.js":"15","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Product.js":"16","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/HeroBanner.js":"17","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/lib/getStripe.js":"18"},{"size":297,"mtime":1689620036300,"results":"19","hashOfConfig":"20"},{"size":2854,"mtime":1690242753299,"results":"21","hashOfConfig":"20"},{"size":931,"mtime":1689264950366,"results":"22","hashOfConfig":"20"},{"size":3621,"mtime":1689561883963,"results":"23","hashOfConfig":"20"},{"size":358,"mtime":1689267062068,"results":"24","hashOfConfig":"20"},{"size":705,"mtime":1689370482578,"results":"25","hashOfConfig":"20"},{"size":4645,"mtime":1689562708289,"results":"26","hashOfConfig":"20"},{"size":127,"mtime":1689018138853,"results":"27","hashOfConfig":"20"},{"size":4276,"mtime":1689629315727,"results":"28","hashOfConfig":"20"},{"size":121,"mtime":1689018090014,"results":"29","hashOfConfig":"20"},{"size":138,"mtime":1689267101964,"results":"30","hashOfConfig":"20"},{"size":332,"mtime":1689113274908,"results":"31","hashOfConfig":"20"},{"size":603,"mtime":1689194960546,"results":"32","hashOfConfig":"20"},{"size":3321,"mtime":1689721657259,"results":"33","hashOfConfig":"20"},{"size":921,"mtime":1689214262754,"results":"34","hashOfConfig":"20"},{"size":666,"mtime":1689199501777,"results":"35","hashOfConfig":"20"},{"size":1691,"mtime":1689197970845,"results":"36","hashOfConfig":"20"},{"size":265,"mtime":1689617465763,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"1p0jlp0",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/index.js",["101"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.js';\nimport App from './App';\nimport Layout  from './components/Layout'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/App.js",["102"],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Layout.js",["103"],[],"// import React from 'react';\n\n\n import Navbar from './Navbar';\n import Footer from './Footer';\n\n// const Layout = ({ children }) => {\n//   return (\n//     <div className=\"layout\">\n//       {/* <Head>\n//         <title>JS Mastery Store</title>\n//       </Head> */}\n//       <header>\n//         <Navbar />\n//       </header>\n//       <main className=\"main-container\">\n//         {children}\n//       </main>\n//       <footer>\n//         <Footer />\n//       </footer>\n//     </div>\n//   )\n// }\n\n// export default Layout\n\nimport React from \"react\"\n// import Header from \"./Header/Header\"\n// import Footer from \"./Footer/Footer\"\nimport { useEffect } from 'react';\n\n\nclass Layout extends React.Component {\n  render(){\n    return (\n      <>\n        <header>\n         <Navbar />\n       </header>\n        <main>{this.props.children}</main>\n        <footer>\n         <Footer />\n       </footer>\n      </>\n    )\n  }\n}\n\nexport default Layout;\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/context/StateContext.js",["104","105","106","107"],[],"import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\n\nconst Context = createContext();\n\nexport const StateContext = ({ children }) => {\n  const [showCart, setShowCart] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalQuantities, setTotalQuantities] = useState(0);\n  const [qty, setQty] = useState(1);\n\n  let foundProduct;\n  let index;\n\n  const onAdd = (product, quantity) => {\n    const checkProductInCart = cartItems.find((item) => item._id === product._id);\n    \n    setTotalPrice((prevTotalPrice) => prevTotalPrice + product.price * quantity);\n    setTotalQuantities((prevTotalQuantities) => prevTotalQuantities + quantity);\n    \n    if(checkProductInCart) {\n      const updatedCartItems = cartItems.map((cartProduct) => {\n        if(cartProduct._id === product._id) return {\n          ...cartProduct,\n          quantity: cartProduct.quantity + quantity\n        }\n      })\n\n      setCartItems(updatedCartItems);\n    } else {\n      product.quantity = quantity;\n      \n      setCartItems([...cartItems, { ...product }]);\n    }\n\n    toast.success(`${qty} ${product.name} added to the cart.`);\n  } \n\n  const onRemove = (product) => {\n    foundProduct = cartItems.find((item) => item._id === product._id);\n    const newCartItems = cartItems.filter((item) => item._id !== product._id);\n\n    setTotalPrice((prevTotalPrice) => prevTotalPrice -foundProduct.price * foundProduct.quantity);\n    setTotalQuantities(prevTotalQuantities => prevTotalQuantities - foundProduct.quantity);\n    setCartItems(newCartItems);\n  }\n  /// left off here fri 14/2023 FIX THIS, UPDATING ORDER OF STUFF IN CART\n  const toggleCartItemQuantity = (id, value) => {\n    foundProduct = cartItems.find((item) => item._id === id)\n    index = cartItems.findIndex((product) => product._id === id);\n    const newCartItems = cartItems.filter((item) => item._id !== id)\n\n    if(value === 'inc') {\n        setCartItems( prevCartItems => \n            prevCartItems.map( item => {          \n                if (item._id === id){\n                    return {...item, quantity: foundProduct.quantity + 1}\n                }\n                return item\n            })\n        );\n      setTotalPrice((prevTotalPrice) => prevTotalPrice + foundProduct.price)\n      setTotalQuantities(prevTotalQuantities => prevTotalQuantities + 1)\n    } else if(value === 'dec') {\n      if (foundProduct.quantity > 1) {\n        setCartItems( prevCartItems => \n            prevCartItems.map( item => {          \n                if (item._id === id){\n                    return {...item, quantity: foundProduct.quantity - 1}\n                }\n                return item\n            })\n        );\n        setTotalPrice((prevTotalPrice) => prevTotalPrice - foundProduct.price)\n        setTotalQuantities(prevTotalQuantities => prevTotalQuantities - 1)\n      }\n    }\n\n\n    \n    \n  }\n\n  const incQty = () => {\n    setQty((prevQty) => prevQty + 1);\n  }\n\n  const decQty = () => {\n    setQty((prevQty) => {\n      if(prevQty - 1 < 1) return 1;\n     \n      return prevQty - 1;\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        showCart,\n        setShowCart,\n        cartItems,\n        totalPrice,\n        totalQuantities,\n        qty,\n        incQty,\n        decQty,\n        onAdd,\n        toggleCartItemQuantity,\n        onRemove,\n        setCartItems,\n        setTotalPrice,\n        setTotalQuantities \n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport const useStateContext = () => useContext(Context);","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Footer.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Navbar.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/product/[slug].js",["108","109","110","111","112","113","114"],[],"import React from 'react'\nimport { client, urlFor }  from '../../lib/client'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineMinus, AiOutlinePlus, AiFillStar, AiOutlineStar } from 'react-icons/ai';\nimport { Product } from '../../components';\nimport { useStateContext } from '../../context/StateContext';\n\n\n\n\n\n\n\n\nexport default function ProductDetails() {\n    \n\n    const { decQty, incQty, qty, onAdd} = useStateContext();\n\n\n\n    \n    const { slug } = useParams();\n\n    const [product, setProduct] = useState([])\n    const [products, setProducts] = useState([])\n\n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const query = `*[_type == \"product\" && slug.current == '${slug}'][0]`; // Modify this query based on your schema\n          const productQuery = '*[_type == \"product\"]'\n\n          const product = await client.fetch(query);\n          const products = await client.fetch(productQuery);\n\n          setProduct(product);\n          setProducts(products);\n\n\n        } catch (error) {\n          console.error('Error fetching data from Sanity:', error);\n        }\n      };\n  \n      fetchData();\n    }, []); \n  \n    const { image, name, details, price } = product\n    const [index, setIndex] = useState(0)\n\n    return (\n    // <div>\n    //     <div className='product-detail-container'>\n    //         <div className='image-container'>\n    //             {image && (\n    //                 <img src={urlFor(image && image[0])}/>  \n    //             )}\n    //         </div>\n    //         {/* <div className='small-images-container'>\n    //             {image?.map((item,i) => \n    //                 <img \n    //                     src={urlFor(item)}\n    //                     className=''\n    //                     onMouseEnter=''\n    //                 />\n    //             )}\n\n    //         </div> */}\n    //         <div className='product-details-desc'>\n    //             <h1>{name}</h1>\n    //             <div className='reviews'>\n    //                 <div>\n    //                     <AiFillStar />\n    //                     <AiFillStar />\n    //                     <AiFillStar />\n    //                     <AiFillStar />\n    //                     <AiOutlineStar />\n    //                 </div>\n\n    //                 <h4>Details: </h4>\n    //                 <p>{details}</p>\n    //                 <p className='price'>${price}</p>\n    //                 <div clas></div>\n    //             </div>\n    //         </div>\n    //     </div>\n    // </div>\n\n\n\n    // fix this \"product details in vid\"\n    <div>\n    <div className=\"product-detail-container\">\n      <div>\n        <div className=\"image-container\">\n        {image && (\n                     <img src={urlFor(image && image[index])}\n                     className='product-detail-image'/>  \n                 )}\n        </div>\n        <div className=\"small-images-container\">\n          {image?.map((item, i) => (\n            <img \n              key={i}\n              src={urlFor(item)}\n              className={i === index ? 'small-image selected-image' : 'small-image'}\n              onMouseEnter={() => setIndex(i)}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"product-detail-desc\">\n        <h1>{name}</h1>\n        <div className=\"reviews\">\n          {/* <div>\n            <AiFillStar />\n            <AiFillStar />\n            <AiFillStar />\n            <AiFillStar />\n            <AiOutlineStar />\n          </div>\n          <p>\n            (20)\n          </p> */}\n        </div>\n        <h4>Details: </h4>\n        <p>{details}</p>\n        <p className=\"price\">${price}</p>\n        <div className=\"quantity\">\n          <h3>Quantity:</h3>\n          <p className=\"quantity-desc\">\n            <span className=\"minus\" onClick={decQty}><AiOutlineMinus /></span>\n            <span className=\"num\">{qty}</span>\n            <span className=\"plus\" onClick={incQty}><AiOutlinePlus /></span>\n          </p>\n        </div>\n        <div className=\"buttons\">\n          <button type=\"button\" className=\"add-to-cart\" onClick={() => onAdd(product,qty)}>Add to Cart</button>\n          <button type=\"button\" className=\"buy-now\" onClick=''>Buy Now</button>\n        </div>\n      </div>\n    </div>\n\n    {/* <div className=\"maylike-products-wrapper\">\n        <h2>You may also like</h2>\n        <div className=\"marquee\">\n          <div className=\"maylike-products-container track\">\n            {products.map((item) => (\n              <Product key={item._id} product={item} />\n            ))}\n          </div>\n        </div>\n    </div> */}\n  </div>\n  )\n}\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/contact/Contact.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/home/Home.js",["115"],[],"//import { useFetch } from '../../hooks/useFetch'\n//import ClothingList from '../../components_original/ClothingList'\n\n//import { db, storage } from '../../firebase/config'\n//import { collection, getDocs } from 'firebase/firestore'\n\n//import { ref, getDownloadURL } from \"firebase/storage\";\n\nimport './Home.css'\nimport { useEffect, useState } from 'react'\n//import blackguyshirt from '../../assets/images/blackguyshirt.jpeg'\nimport ProductDetails from '../product/[slug]'\n\nimport { Product, FooterBanner, HeroBanner } from '../../components'\n\nimport { client }  from '../../lib/client'\n\nexport default function Home() {\n    //const [clothes, setClothes] = useState(null)\n\n    // useEffect(() => {\n    //     const ref = collection(db, 'clothing')\n    //     //const img = storage.ref()\n\n        \n    //     getDocs(ref)\n    //         .then((snapshot) => {\n    //             let results =[]\n    //             snapshot.docs.forEach(doc => {\n    //                 results.push({id: doc.id, ...doc.data()})\n    //             })\n    //             setClothes(results)\n                \n    //         })\n    // }, [])\n\n\n    \n\n    // useEffect(() => {\n    //     const query = '*[_type == \"projects\"]'\n\n    //     client.fetch(query)\n    //       .then((data) => setProjects(data))\n    // }, [])\n\n    // useEffect(() => {\n    //   const interval= setInterval(()=>{\n    //     const fetchdata = async () => {\n    //       const res = await fetch(\"url\")\n    //       const data = await res.json()\n    //       setsongs(data)\n    //     }\n    //     fetchdata()\n    //    },15000)\n    //    return()=>clearInterval(interval)\n\n\n    \n       \n\n      //  useEffect(() => {\n      //    client\n      //      .fetch(\n      //        `*[_type == \"product\"]{\n      //       image{\n      //         asset->{\n      //           _id,\n      //           url\n      //         },\n      //       },\n      //       name,\n      //       slug,\n      //       price,\n      //       details,\n      //    }`\n      //      )\n      //      .then((data) => setProducts(data))\n      //      .catch(console.error);\n      //  }, []);\n\n      //  useEffect(() => {\n      //   client\n      //     .fetch(\n      //       `*[_type == \"banner\"]{\n      //      image{\n      //        asset->{\n      //          _id,\n      //          url\n      //        },\n      //      },\n      //      buttonText,\n      //      product,\n      //      desc,\n      //      smallText,\n      //      midText,\n      //      largeText1,\n      //      largeText2,\n      //      discount,\n      //      saleTime,\n      //   }`\n      //     )\n      //     .then((data) => setBannerData(data))\n      //     .catch(console.error);\n      //     console.log(bannerData)\n      // }, []);\n    //    useEffect(async () => {\n    //     const query = '*[_type == \"projects\"]'\n    //     const product = await client.fetch(query)\n\n    //     client.fetch(query)\n    //       .then((data) => setProducts(data))\n    // }, [])\n    \n    const [products, setProducts] = useState([])\n    const [bannerData, setBannerData] = useState([])\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const query = '*[_type == \"product\"]'; // Modify this query based on your schema\n          const productResult = await client.fetch(query);\n          setProducts(productResult);\n          const bannerQuery = '*[_type == \"banner\"]'; // Modify this query based on your schema\n          const bannerResult = await client.fetch(bannerQuery);\n          setBannerData(bannerResult)\n          \n        } catch (error) {\n          console.error('Error fetching data from Sanity:', error);\n        }\n      };\n  \n      fetchData();\n    }, []); \n\n    \n  \n    \n  return (\n    // <div className='home'>\n    //     <img src={blackguyshirt}></img>\n    //     {clothes && <ClothingList clothes={clothes} />} \n    // </div>\n    <>\n    <HeroBanner heroBanner={bannerData.length && bannerData[0]}/>\n    \n    <div className='products-heading'>\n        <h2>ATLAS CLOTHING</h2>\n        <p>BEST CLOTHING IN THE GAME</p>\n\n    </div>\n\n    <div className='products-container'>\n        {products?.map((product) => <Product key={product._id} product={product}/>)}\n    </div>\n\n    <FooterBanner footerBanner={bannerData.length && bannerData[0]}/>\n    </>\n  )\n}\n\n\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/about/About.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/pages/clothing/Clothing.js",["116"],[],"import './Clothing.css'\n\nimport { useState } from 'react'\n\n\nexport default function Clothing() {\n  return (\n    <div>Clothing</div>\n  )\n}\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/index.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/lib/client.js",[],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Cart.js",["117","118"],[],"/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/FooterBanner.js",["119"],[],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { urlFor } from '../lib/client'\n\n\nexport default function FooterBanner( { footerBanner: { discount, largeText1, largeText2, saleTime, smalltext, midText, desc, product, buttonText, image}}) {\n  return (\n    <div className=\"footer-banner-container\">\n      <div className=\"banner-desc\">\n        <div className=\"left\">\n          <p>{discount}</p>\n          <h3>{largeText1}</h3>\n          <h3>{largeText2}</h3>\n          <p>{saleTime}</p>\n        </div>\n        <div className=\"right\">\n          <p>{smalltext}</p>\n          <h3>{midText}</h3>\n          <p>{desc}</p>\n          <Link to={`/product/${product}`}>\n            <button type=\"button\">{buttonText}</button>\n          </Link>\n        </div>\n        {image && (\n        <img \n          src={urlFor(image)} className=\"footer-banner-image\"\n        />\n        )}\n\n      </div>\n    </div>\n  )\n}\n\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/Product.js",["120"],[],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { urlFor } from '../lib/client'\n\nexport default function Product({ product: { image, name, slug, price } }) {\n  return (\n    <div>\n        <Link to={`/product/${slug.current}`}>\n            <div className='product-card'>\n                <img \n                    src={urlFor(image && image[0])}\n                    width={250}\n                    height={250}\n                    className='product-image'\n                />\n                <p className='product-name'>{name}</p>\n                <p className='product-price'>${price}</p>\n            </div>\n        </Link>\n\n\n    </div>\n  )\n}\n","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/components/HeroBanner.js",["121"],[],"import React from 'react';\nimport { Link }  from 'react-router-dom';\n\nimport { urlFor } from '../lib/client';\n\n// const HeroBanner = ({ heroBanner }) => {\n//   return (\n//     <div className=\"hero-banner-container\">\n//       <div>\n//         <p className=\"beats-solo\">{heroBanner[0].smallText}</p>\n//         <h3>{heroBanner[0].midText}</h3>\n//         <h1>{heroBanner[0].largeText1}</h1>\n//         <img src={urlFor(heroBanner[0].image)} alt=\"headphones\" className=\"hero-banner-image\" />\n\n//         <div>\n//           <div className=\"desc\">\n//             <h5>Description</h5>\n//             <p>{heroBanner.desc}</p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default HeroBanner\n\n\nexport default function HeroBanner({ heroBanner }) {\n  return (\n    <div className='hero-banner-container'>\n      <div>\n        \n        \n        <p className='beats-solo'>{heroBanner?.smallText ?? '-'}</p>\n        <h3>{heroBanner?.midText ?? '-'}</h3>\n        <h1>{heroBanner?.largeText1 ?? '-'}</h1>\n        \n        {heroBanner.image && (\n        <img\n          src={urlFor(heroBanner?.image).url()}\n          className='hero-banner-image'\n          alt=\"headphones\"\n          />\n        )}\n\n          {/* fix this*/}\n        <div>\n          <Link to={`/product/${heroBanner.product}`}>\n            <button type=\"button\">{heroBanner?.buttonText ?? '-'}</button>\n          </Link>\n          <div className='desc'>\n            <h5>DESCRIPTION</h5>\n            <p>{heroBanner?.desc ?? '-'}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n{/* <img src={urlFor(heroBanner?.image ?? \"\")} alt=\"headphones\" className='hero-banner-image'></img> */}","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/lib/getStripe.js",[],[],{"ruleId":"122","severity":1,"message":"123","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":25,"column":10,"nodeType":"124","messageId":"125","endLine":25,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":31,"column":10,"nodeType":"124","messageId":"125","endLine":31,"endColumn":19},{"ruleId":"122","severity":1,"message":"127","line":1,"column":54,"nodeType":"124","messageId":"125","endLine":1,"endColumn":63},{"ruleId":"122","severity":1,"message":"128","line":14,"column":7,"nodeType":"124","messageId":"125","endLine":14,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":23,"column":60,"nodeType":"131","messageId":"132","endLine":23,"endColumn":62},{"ruleId":"122","severity":1,"message":"133","line":52,"column":11,"nodeType":"124","messageId":"125","endLine":52,"endColumn":23},{"ruleId":"122","severity":1,"message":"134","line":5,"column":41,"nodeType":"124","messageId":"125","endLine":5,"endColumn":51},{"ruleId":"122","severity":1,"message":"135","line":5,"column":53,"nodeType":"124","messageId":"125","endLine":5,"endColumn":66},{"ruleId":"122","severity":1,"message":"136","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":17},{"ruleId":"122","severity":1,"message":"137","line":27,"column":12,"nodeType":"124","messageId":"125","endLine":27,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":49,"column":8,"nodeType":"140","endLine":49,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":100,"column":22,"nodeType":"144","endLine":101,"endColumn":56},{"ruleId":"142","severity":1,"message":"143","line":106,"column":13,"nodeType":"144","endLine":111,"endColumn":15},{"ruleId":"122","severity":1,"message":"145","line":12,"column":8,"nodeType":"124","messageId":"125","endLine":12,"endColumn":22},{"ruleId":"122","severity":1,"message":"146","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"147","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":55,"column":15,"nodeType":"144","endLine":55,"endColumn":81},{"ruleId":"142","severity":1,"message":"143","line":25,"column":9,"nodeType":"144","endLine":27,"endColumn":11},{"ruleId":"142","severity":1,"message":"143","line":11,"column":17,"nodeType":"144","endLine":16,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":61,"column":1,"nodeType":"150","messageId":"151","endLine":61,"endColumn":105},"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'useEffect' is defined but never used.","'index' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'newCartItems' is assigned a value but never used.","'AiFillStar' is defined but never used.","'AiOutlineStar' is defined but never used.","'Product' is defined but never used.","'products' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProductDetails' is defined but never used.","'useState' is defined but never used.","'toast' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",{"desc":"153","fix":"154"},"Update the dependencies array to be: [slug]",{"range":"155","text":"156"},[1199,1201],"[slug]"]