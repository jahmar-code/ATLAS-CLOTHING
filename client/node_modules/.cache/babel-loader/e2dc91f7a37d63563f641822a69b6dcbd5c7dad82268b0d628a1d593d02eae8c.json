{"ast":null,"code":"import{map}from'./map';import{innerFrom}from'../observable/innerFrom';import{operate}from'../util/lift';import{createOperatorSubscriber}from'./OperatorSubscriber';export function exhaustMap(project,resultSelector){if(resultSelector){return function(source){return source.pipe(exhaustMap(function(a,i){return innerFrom(project(a,i)).pipe(map(function(b,ii){return resultSelector(a,b,i,ii);}));}));};}return operate(function(source,subscriber){var index=0;var innerSub=null;var isComplete=false;source.subscribe(createOperatorSubscriber(subscriber,function(outerValue){if(!innerSub){innerSub=createOperatorSubscriber(subscriber,undefined,function(){innerSub=null;isComplete&&subscriber.complete();});innerFrom(project(outerValue,index++)).subscribe(innerSub);}},function(){isComplete=true;!innerSub&&subscriber.complete();}));});}","map":{"version":3,"names":["map","innerFrom","operate","createOperatorSubscriber","exhaustMap","project","resultSelector","source","pipe","a","i","b","ii","subscriber","index","innerSub","isComplete","subscribe","outerValue","undefined","complete"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/operators/exhaustMap.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n"],"mappings":"AAGA,OAASA,GAAG,KAAQ,OAAO,CAC3B,OAASC,SAAS,KAAQ,yBAAyB,CACnD,OAASC,OAAO,KAAQ,cAAc,CACtC,OAASC,wBAAwB,KAAQ,sBAAsB,CA8D/D,MAAM,SAAU,CAAAC,UAAUA,CACxBC,OAAuC,CACvCC,cAA6G,EAE7G,GAAIA,cAAc,CAAE,CAElB,MAAO,UAACC,MAAqB,EAC3B,OAAAA,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,SAACK,CAAC,CAAEC,CAAC,EAAK,OAAAT,SAAS,CAACI,OAAO,CAACI,CAAC,CAAEC,CAAC,CAAC,CAAC,CAACF,IAAI,CAACR,GAAG,CAAC,SAACW,CAAM,CAAEC,EAAO,EAAK,OAAAN,cAAc,CAACG,CAAC,CAAEE,CAAC,CAAED,CAAC,CAAEE,EAAE,CAAC,CAA3B,CAA2B,CAAC,CAAC,CAApF,CAAoF,CAAC,CAAC,CAAvH,CAAuH,C,CAE3H,MAAO,CAAAV,OAAO,CAAC,SAACK,MAAM,CAAEM,UAAU,EAChC,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,GAAI,CAAAC,QAAQ,CAAyB,IAAI,CACzC,GAAI,CAAAC,UAAU,CAAG,KAAK,CACtBT,MAAM,CAACU,SAAS,CACdd,wBAAwB,CACtBU,UAAU,CACV,SAACK,UAAU,EACT,GAAI,CAACH,QAAQ,CAAE,CACbA,QAAQ,CAAGZ,wBAAwB,CAACU,UAAU,CAAEM,SAAS,CAAE,WACzDJ,QAAQ,CAAG,IAAI,CACfC,UAAU,EAAIH,UAAU,CAACO,QAAQ,EAAE,CACrC,CAAC,CAAC,CACFnB,SAAS,CAACI,OAAO,CAACa,UAAU,CAAEJ,KAAK,EAAE,CAAC,CAAC,CAACG,SAAS,CAACF,QAAQ,CAAC,C,CAE/D,CAAC,CACD,WACEC,UAAU,CAAG,IAAI,CACjB,CAACD,QAAQ,EAAIF,UAAU,CAACO,QAAQ,EAAE,CACpC,CAAC,CACF,CACF,CACH,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}