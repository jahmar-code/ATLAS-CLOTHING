{"ast":null,"code":"var _jsxFileName = \"/Users/jawaadahmar/Desktop/atlas-clothing/src/pages/product/[slug].js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { client, urlFor } from '../../lib/client';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductDetails() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [product, setProduct] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const query = `*[_type == \"product\" && slug.current == '${slug}'][0]`; // Modify this query based on your schema\n        const productQuery = '*[_type == \"product\"]';\n        const product = await client.fetch(query);\n        const products = await client.fetch(productQuery);\n        setProduct(product);\n        setProducts(products);\n      } catch (error) {\n        console.error('Error fetching data from Sanity:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const {\n    image,\n    name,\n    details,\n    price\n  } = product;\n  console.log(product);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlFor(image && image[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-images-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductDetails, \"hW94wF6lvZ0G1+8dnZAqJ4As0Ho=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetails;\nvar _c;\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"names":["React","client","urlFor","useEffect","useState","useParams","jsxDEV","_jsxDEV","ProductDetails","_s","slug","product","setProduct","products","setProducts","fetchData","query","productQuery","fetch","error","console","image","name","details","price","log","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/src/pages/product/[slug].js"],"sourcesContent":["import React from 'react'\nimport { client, urlFor }  from '../../lib/client'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nexport default function ProductDetails() {\n    \n\n    \n    const { slug } = useParams();\n\n    const [product, setProduct] = useState([])\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const query = `*[_type == \"product\" && slug.current == '${slug}'][0]`; // Modify this query based on your schema\n          const productQuery = '*[_type == \"product\"]'\n\n          const product = await client.fetch(query);\n          const products = await client.fetch(productQuery);\n\n          setProduct(product);\n          setProducts(products);\n\n\n        } catch (error) {\n          console.error('Error fetching data from Sanity:', error);\n        }\n      };\n  \n      fetchData();\n    }, []); \n  \n     const { image, name, details, price } = product\n     console.log(product)\n    return (\n    <div>\n        <div className='product-detail-container'>\n            <div className='image-container'>\n                {image && (\n                    <img src={urlFor(image && image[0])}/>  \n                )}\n            </div>\n            <div className='small-images-container'>\n\n\n            </div>\n        </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,QAAS,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAIrC,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE5B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAI,4CAA2CN,IAAK,OAAM,CAAC,CAAC;QACvE,MAAMO,YAAY,GAAG,uBAAuB;QAE5C,MAAMN,OAAO,GAAG,MAAMV,MAAM,CAACiB,KAAK,CAACF,KAAK,CAAC;QACzC,MAAMH,QAAQ,GAAG,MAAMZ,MAAM,CAACiB,KAAK,CAACD,YAAY,CAAC;QAEjDL,UAAU,CAACD,OAAO,CAAC;QACnBG,WAAW,CAACD,QAAQ,CAAC;MAGvB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEL,MAAM;IAAEM,KAAK;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,OAAO;EAC/CS,OAAO,CAACK,GAAG,CAACd,OAAO,CAAC;EACrB,oBACAJ,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAKoB,SAAS,EAAC,0BAA0B;MAAAD,QAAA,gBACrCnB,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3BL,KAAK,iBACFd,OAAA;UAAKqB,GAAG,EAAE1B,MAAM,CAACmB,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MACxC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNzB,OAAA;QAAKoB,SAAS,EAAC;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACvB,EAAA,CA/CuBD,cAAc;EAAA,QAIjBH,SAAS;AAAA;AAAA4B,EAAA,GAJNzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}