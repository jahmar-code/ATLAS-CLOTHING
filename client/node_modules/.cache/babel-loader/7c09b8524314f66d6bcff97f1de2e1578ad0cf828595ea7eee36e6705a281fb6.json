{"ast":null,"code":"import{Subject}from'../Subject';import{Observable}from'../Observable';import{defer}from'./defer';var DEFAULT_CONFIG={connector:function connector(){return new Subject();},resetOnDisconnect:true};export function connectable(source,config){if(config===void 0){config=DEFAULT_CONFIG;}var connection=null;var connector=config.connector,_a=config.resetOnDisconnect,resetOnDisconnect=_a===void 0?true:_a;var subject=connector();var result=new Observable(function(subscriber){return subject.subscribe(subscriber);});result.connect=function(){if(!connection||connection.closed){connection=defer(function(){return source;}).subscribe(subject);if(resetOnDisconnect){connection.add(function(){return subject=connector();});}}return connection;};return result;}","map":{"version":3,"names":["Subject","Observable","defer","DEFAULT_CONFIG","connector","resetOnDisconnect","connectable","source","config","connection","_a","subject","result","subscriber","subscribe","connect","closed","add"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/observable/connectable.ts"],"sourcesContent":["import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n"],"mappings":"AACA,OAASA,OAAO,KAAQ,YAAY,CAEpC,OAASC,UAAU,KAAQ,eAAe,CAC1C,OAASC,KAAK,KAAQ,SAAS,CAsB/B,GAAM,CAAAC,cAAc,CAA+B,CACjDC,SAAS,CAAE,SAAAA,UAAA,EAAM,UAAI,CAAAJ,OAAO,EAAW,CAAtB,CAAsB,CACvCK,iBAAiB,CAAE,I,CACpB,CAUD,MAAM,SAAU,CAAAC,WAAWA,CAAIC,MAA0B,CAAEC,MAA6C,EAA7C,GAAAA,MAAA,WAAAA,MAAA,CAAAL,cAA6C,EAEtG,GAAI,CAAAM,UAAU,CAAwB,IAAI,CAClC,IAAAL,SAAS,CAA+BI,MAAM,CAAAJ,SAArC,CAAEM,EAAA,CAA6BF,MAAM,CAAAH,iBAAX,CAAxBA,iBAAiB,CAAAK,EAAA,UAAG,IAAI,CAAAA,EAAA,CAC3C,GAAI,CAAAC,OAAO,CAAGP,SAAS,EAAE,CAEzB,GAAM,CAAAQ,MAAM,CAAQ,GAAI,CAAAX,UAAU,CAAI,SAACY,UAAU,EAC/C,MAAO,CAAAF,OAAO,CAACG,SAAS,CAACD,UAAU,CAAC,CACtC,CAAC,CAAC,CAKFD,MAAM,CAACG,OAAO,CAAG,WACf,GAAI,CAACN,UAAU,EAAIA,UAAU,CAACO,MAAM,CAAE,CACpCP,UAAU,CAAGP,KAAK,CAAC,WAAM,OAAAK,MAAM,CAAN,CAAM,CAAC,CAACO,SAAS,CAACH,OAAO,CAAC,CACnD,GAAIN,iBAAiB,CAAE,CACrBI,UAAU,CAACQ,GAAG,CAAC,WAAM,MAAC,CAAAN,OAAO,CAAGP,SAAS,EAAE,CAAtB,CAAuB,CAAC,C,EAGjD,MAAO,CAAAK,UAAU,CACnB,CAAC,CAED,MAAO,CAAAG,MAAM,CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}