{"ast":null,"code":"import{createErrorClass}from'./createErrorClass';export var ArgumentOutOfRangeError=createErrorClass(function(_super){return function ArgumentOutOfRangeErrorImpl(){_super(this);this.name='ArgumentOutOfRangeError';this.message='argument out of range';};});","map":{"version":3,"names":["createErrorClass","ArgumentOutOfRangeError","_super","ArgumentOutOfRangeErrorImpl","name","message"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,oBAAoB,CAsBrD,MAAO,IAAM,CAAAC,uBAAuB,CAAgCD,gBAAgB,CAClF,SAACE,MAAM,EACL,eAAS,CAAAC,2BAA2BA,CAAA,EAClCD,MAAM,CAAC,IAAI,CAAC,CACZ,IAAI,CAACE,IAAI,CAAG,yBAAyB,CACrC,IAAI,CAACC,OAAO,CAAG,uBAAuB,CACxC,CAAC,CAJD,CAIC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}