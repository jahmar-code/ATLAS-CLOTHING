{"ast":null,"code":"import{__extends}from\"tslib\";import{AsyncScheduler}from'./AsyncScheduler';var AsapScheduler=function(_super){__extends(AsapScheduler,_super);function AsapScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}AsapScheduler.prototype.flush=function(action){this._active=true;var flushId=this._scheduled;this._scheduled=undefined;var actions=this.actions;var error;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while((action=actions[0])&&action.id===flushId&&actions.shift());this._active=false;if(error){while((action=actions[0])&&action.id===flushId&&actions.shift()){action.unsubscribe();}throw error;}};return AsapScheduler;}(AsyncScheduler);export{AsapScheduler};","map":{"version":3,"names":["AsyncScheduler","AsapScheduler","_super","__extends","prototype","flush","action","_active","flushId","_scheduled","undefined","actions","error","shift","execute","state","delay","id","unsubscribe"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"],"mappings":"6BACA,OAASA,cAAc,KAAQ,kBAAkB,CAEjD,IAAAC,aAAA,UAAAC,MAAA,EAAmCC,SAAA,CAAAF,aAAA,CAAAC,MAAA,EAAnC,SAAAD,cAAA,E,yDAkCA,CAjCSA,aAAA,CAAAG,SAAA,CAAAC,KAAK,CAAZ,SAAaC,MAAyB,EACpC,IAAI,CAACC,OAAO,CAAG,IAAI,CAUnB,GAAM,CAAAC,OAAO,CAAG,IAAI,CAACC,UAAU,CAC/B,IAAI,CAACA,UAAU,CAAGC,SAAS,CAEnB,IAAAC,OAAO,CAAK,IAAI,CAAAA,OAAT,CACf,GAAI,CAAAC,KAAU,CACdN,MAAM,CAAGA,MAAM,EAAIK,OAAO,CAACE,KAAK,EAAG,CAEnC,EAAG,CACD,GAAKD,KAAK,CAAGN,MAAM,CAACQ,OAAO,CAACR,MAAM,CAACS,KAAK,CAAET,MAAM,CAACU,KAAK,CAAC,CAAG,CACxD,M,EAEH,MAAQ,CAACV,MAAM,CAAGK,OAAO,CAAC,CAAC,CAAC,GAAKL,MAAM,CAACW,EAAE,GAAKT,OAAO,EAAIG,OAAO,CAACE,KAAK,EAAE,EAE1E,IAAI,CAACN,OAAO,CAAG,KAAK,CAEpB,GAAIK,KAAK,CAAE,CACT,MAAO,CAACN,MAAM,CAAGK,OAAO,CAAC,CAAC,CAAC,GAAKL,MAAM,CAACW,EAAE,GAAKT,OAAO,EAAIG,OAAO,CAACE,KAAK,EAAE,CAAE,CACxEP,MAAM,CAACY,WAAW,EAAE,C,CAEtB,KAAM,CAAAN,KAAK,C,CAEf,CAAC,CACH,OAAAX,aAAC,CAAD,CAAC,CAlCkCD,cAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}