{"ast":null,"code":"import{operate}from'../util/lift';import{createOperatorSubscriber}from'./OperatorSubscriber';import{innerFrom}from'../observable/innerFrom';import{noop}from'../util/noop';export function skipUntil(notifier){return operate(function(source,subscriber){var taking=false;var skipSubscriber=createOperatorSubscriber(subscriber,function(){skipSubscriber===null||skipSubscriber===void 0?void 0:skipSubscriber.unsubscribe();taking=true;},noop);innerFrom(notifier).subscribe(skipSubscriber);source.subscribe(createOperatorSubscriber(subscriber,function(value){return taking&&subscriber.next(value);}));});}","map":{"version":3,"names":["operate","createOperatorSubscriber","innerFrom","noop","skipUntil","notifier","source","subscriber","taking","skipSubscriber","unsubscribe","subscribe","value","next"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/operators/skipUntil.ts"],"sourcesContent":["import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n"],"mappings":"AACA,OAASA,OAAO,KAAQ,cAAc,CACtC,OAASC,wBAAwB,KAAQ,sBAAsB,CAC/D,OAASC,SAAS,KAAQ,yBAAyB,CACnD,OAASC,IAAI,KAAQ,cAAc,CA+CnC,MAAM,SAAU,CAAAC,SAASA,CAAIC,QAA8B,EACzD,MAAO,CAAAL,OAAO,CAAC,SAACM,MAAM,CAAEC,UAAU,EAChC,GAAI,CAAAC,MAAM,CAAG,KAAK,CAElB,GAAM,CAAAC,cAAc,CAAGR,wBAAwB,CAC7CM,UAAU,CACV,WACEE,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAEC,WAAW,EAAE,CAC7BF,MAAM,CAAG,IAAI,CACf,CAAC,CACDL,IAAI,CACL,CAEDD,SAAS,CAACG,QAAQ,CAAC,CAACM,SAAS,CAACF,cAAc,CAAC,CAE7CH,MAAM,CAACK,SAAS,CAACV,wBAAwB,CAACM,UAAU,CAAE,SAACK,KAAK,EAAK,OAAAJ,MAAM,EAAID,UAAU,CAACM,IAAI,CAACD,KAAK,CAAC,CAAhC,CAAgC,CAAC,CAAC,CACrG,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}