{"ast":null,"code":"import _objectSpread from\"/Users/jawaadahmar/Desktop/atlas-clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/Users/jawaadahmar/Desktop/atlas-clothing/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/jawaadahmar/Desktop/atlas-clothing/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{processOptions,validateOptions}from'./_chunks/defaultOptionsValidator-11b3788b.js';import parseHeaders from'parse-headers';var middlewareReducer=function middlewareReducer(middleware){return function applyMiddleware(hook,defaultValue){var bailEarly=hook===\"onError\";var value=defaultValue;for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}for(var i=0;i<middleware[hook].length;i++){var handler=middleware[hook][i];value=handler.apply(void 0,[value].concat(args));if(bailEarly&&!value){break;}}return value;};};function createPubSub(){var subscribers=/* @__PURE__ */Object.create(null);var nextId=0;function subscribe(subscriber){var id=nextId++;subscribers[id]=subscriber;return function unsubscribe(){delete subscribers[id];};}function publish(event){for(var id in subscribers){subscribers[id](event);}}return{publish:publish,subscribe:subscribe};}var channelNames=[\"request\",\"response\",\"progress\",\"error\",\"abort\"];var middlehooks=[\"processOptions\",\"validateOptions\",\"interceptRequest\",\"finalizeOptions\",\"onRequest\",\"onResponse\",\"onError\",\"onReturn\",\"onHeaders\"];function createRequester(initMiddleware,httpRequest){var loadedMiddleware=[];var middleware=middlehooks.reduce(function(ware,name){ware[name]=ware[name]||[];return ware;},{processOptions:[processOptions],validateOptions:[validateOptions]// eslint-disable-next-line @typescript-eslint/no-explicit-any\n});function request(opts){var onResponse=function onResponse(reqErr,res,ctx){var error=reqErr;var response=res;if(!error){try{response=applyMiddleware(\"onResponse\",res,ctx);}catch(err){response=null;error=err;}}error=error&&applyMiddleware(\"onError\",error,ctx);if(error){channels.error.publish(error);}else if(response){channels.response.publish(response);}};var channels=channelNames.reduce(function(target,name){target[name]=createPubSub();return target;},{});var applyMiddleware=middlewareReducer(middleware);var options=applyMiddleware(\"processOptions\",opts);applyMiddleware(\"validateOptions\",options);var context={options:options,channels:channels,applyMiddleware:applyMiddleware};var ongoingRequest;var unsubscribe=channels.request.subscribe(function(ctx){ongoingRequest=httpRequest(ctx,function(err,res){return onResponse(err,res,ctx);});});channels.abort.subscribe(function(){unsubscribe();if(ongoingRequest){ongoingRequest.abort();}});var returnValue=applyMiddleware(\"onReturn\",channels,context);if(returnValue===channels){channels.request.publish(context);}return returnValue;}request.use=function use(newMiddleware){if(!newMiddleware){throw new Error(\"Tried to add middleware that resolved to falsey value\");}if(typeof newMiddleware===\"function\"){throw new Error(\"Tried to add middleware that was a function. It probably expects you to pass options to it.\");}if(newMiddleware.onReturn&&middleware.onReturn.length>0){throw new Error(\"Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event\");}middlehooks.forEach(function(key){if(newMiddleware[key]){middleware[key].push(newMiddleware[key]);}});loadedMiddleware.push(newMiddleware);return request;};request.clone=function(){return createRequester(loadedMiddleware,httpRequest);};initMiddleware.forEach(request.use);return request;}var __defProp=Object.defineProperty;var __defNormalProp=function __defNormalProp(obj,key,value){return key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;};var __publicField=function __publicField(obj,key,value){__defNormalProp(obj,typeof key!==\"symbol\"?key+\"\":key,value);return value;};var __accessCheck=function __accessCheck(obj,member,msg){if(!member.has(obj))throw TypeError(\"Cannot \"+msg);};var __privateGet=function __privateGet(obj,member,getter){__accessCheck(obj,member,\"read from private field\");return getter?getter.call(obj):member.get(obj);};var __privateAdd=function __privateAdd(obj,member,value){if(member.has(obj))throw TypeError(\"Cannot add the same private member more than once\");member instanceof WeakSet?member.add(obj):member.set(obj,value);};var __privateSet=function __privateSet(obj,member,value,setter){__accessCheck(obj,member,\"write to private field\");setter?setter.call(obj,value):member.set(obj,value);return value;};var _method,_url,_resHeaders,_headers,_controller,_init;var FetchXhr=/*#__PURE__*/function(){function FetchXhr(){_classCallCheck(this,FetchXhr);/**\n     * Public interface, interop with real XMLHttpRequest\n     */__publicField(this,\"onabort\");__publicField(this,\"onerror\");__publicField(this,\"onreadystatechange\");__publicField(this,\"ontimeout\");/**\n     * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n     */__publicField(this,\"readyState\",0);__publicField(this,\"response\");__publicField(this,\"responseText\");__publicField(this,\"responseType\",\"\");__publicField(this,\"status\");__publicField(this,\"statusText\");__publicField(this,\"withCredentials\");/**\n     * Private implementation details\n     */__privateAdd(this,_method,void 0);__privateAdd(this,_url,void 0);__privateAdd(this,_resHeaders,void 0);__privateAdd(this,_headers,{});__privateAdd(this,_controller,void 0);__privateAdd(this,_init,{});}// eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n_createClass(FetchXhr,[{key:\"open\",value:function open(method,url,_async){__privateSet(this,_method,method);__privateSet(this,_url,url);__privateSet(this,_resHeaders,\"\");this.readyState=1;this.onreadystatechange();__privateSet(this,_controller,void 0);}},{key:\"abort\",value:function abort(){if(__privateGet(this,_controller)){__privateGet(this,_controller).abort();}}},{key:\"getAllResponseHeaders\",value:function getAllResponseHeaders(){return __privateGet(this,_resHeaders);}},{key:\"setRequestHeader\",value:function setRequestHeader(name,value){__privateGet(this,_headers)[name]=value;}// Allow setting extra fetch init options, needed for runtimes such as Vercel Edge to set `cache` and other options in React Server Components\n},{key:\"setInit\",value:function setInit(init){__privateSet(this,_init,init);}},{key:\"send\",value:function send(body){var _this=this;var textBody=this.responseType!==\"arraybuffer\";var options=_objectSpread(_objectSpread({},__privateGet(this,_init)),{},{method:__privateGet(this,_method),headers:__privateGet(this,_headers),body:body});if(typeof AbortController===\"function\"){__privateSet(this,_controller,new AbortController());if(typeof EventTarget!==\"undefined\"&&__privateGet(this,_controller).signal instanceof EventTarget){options.signal=__privateGet(this,_controller).signal;}}if(typeof document!==\"undefined\"){options.credentials=this.withCredentials?\"include\":\"omit\";}fetch(__privateGet(this,_url),options).then(function(res){res.headers.forEach(function(value,key){__privateSet(_this,_resHeaders,__privateGet(_this,_resHeaders)+\"\".concat(key,\": \").concat(value,\"\\r\\n\"));});_this.status=res.status;_this.statusText=res.statusText;_this.readyState=3;return textBody?res.text():res.arrayBuffer();}).then(function(resBody){if(typeof resBody===\"string\"){_this.responseText=resBody;}else{_this.response=resBody;}_this.readyState=4;_this.onreadystatechange();}).catch(function(err){var _a;if(err.name===\"AbortError\"){_this.onabort();return;}(_a=_this.onerror)==null?void 0:_a.call(_this,err);});}}]);return FetchXhr;}();_method=new WeakMap();_url=new WeakMap();_resHeaders=new WeakMap();_headers=new WeakMap();_controller=new WeakMap();_init=new WeakMap();var adapter=typeof XMLHttpRequest===\"function\"?\"xhr\":\"fetch\";var XmlHttpRequest=adapter===\"xhr\"?XMLHttpRequest:FetchXhr;var httpRequester=function httpRequester(context,callback){var opts=context.options;var options=context.applyMiddleware(\"finalizeOptions\",opts);var timers={};var injectedResponse=context.applyMiddleware(\"interceptRequest\",void 0,{adapter:adapter,context:context});if(injectedResponse){var cbTimer=setTimeout(callback,0,null,injectedResponse);var cancel=function cancel(){return clearTimeout(cbTimer);};return{abort:cancel};}var xhr=new XmlHttpRequest();if(xhr instanceof FetchXhr&&typeof options.fetch===\"object\"){xhr.setInit(options.fetch);}var headers=options.headers;var delays=options.timeout;var aborted=false;var loaded=false;var timedOut=false;xhr.onerror=function(event){onError(new Error(\"Request error while attempting to reach \".concat(options.url).concat(event.lengthComputable?\"(\".concat(event.loaded,\" of \").concat(event.total,\" bytes transferred)\"):\"\")));};xhr.ontimeout=function(event){onError(new Error(\"Request timeout while attempting to reach \".concat(options.url).concat(event.lengthComputable?\"(\".concat(event.loaded,\" of \").concat(event.total,\" bytes transferred)\"):\"\")));};xhr.onabort=function(){stopTimers(true);aborted=true;};xhr.onreadystatechange=function(){resetTimers();if(aborted||xhr.readyState!==4){return;}if(xhr.status===0){return;}onLoad();};xhr.open(options.method,options.url,true// Always async\n);xhr.withCredentials=!!options.withCredentials;if(headers&&xhr.setRequestHeader){for(var key in headers){if(headers.hasOwnProperty(key)){xhr.setRequestHeader(key,headers[key]);}}}if(options.rawBody){xhr.responseType=\"arraybuffer\";}context.applyMiddleware(\"onRequest\",{options:options,adapter:adapter,request:xhr,context:context});xhr.send(options.body||null);if(delays){timers.connect=setTimeout(function(){return timeoutRequest(\"ETIMEDOUT\");},delays.connect);}return{abort:abort};function abort(){aborted=true;if(xhr){xhr.abort();}}function timeoutRequest(code){timedOut=true;xhr.abort();var error=new Error(code===\"ESOCKETTIMEDOUT\"?\"Socket timed out on request to \".concat(options.url):\"Connection timed out on request to \".concat(options.url));error.code=code;context.channels.error.publish(error);}function resetTimers(){if(!delays){return;}stopTimers();timers.socket=setTimeout(function(){return timeoutRequest(\"ESOCKETTIMEDOUT\");},delays.socket);}function stopTimers(force){if(force||aborted||xhr.readyState>=2&&timers.connect){clearTimeout(timers.connect);}if(timers.socket){clearTimeout(timers.socket);}}function onError(error){if(loaded){return;}stopTimers(true);loaded=true;xhr=null;var err=error||new Error(\"Network error while attempting to reach \".concat(options.url));err.isNetworkError=true;err.request=options;callback(err);}function reduceResponse(){return{body:xhr.response||(xhr.responseType===\"\"||xhr.responseType===\"text\"?xhr.responseText:\"\"),url:options.url,method:options.method,headers:parseHeaders(xhr.getAllResponseHeaders()),statusCode:xhr.status,statusMessage:xhr.statusText};}function onLoad(){if(aborted||loaded||timedOut){return;}if(xhr.status===0){onError(new Error(\"Unknown XHR error\"));return;}stopTimers();loaded=true;callback(null,reduceResponse());}};var getIt=function getIt(){var initMiddleware=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var httpRequest=arguments.length>1&&arguments[1]!==undefined?arguments[1]:httpRequester;return createRequester(initMiddleware,httpRequest);};var environment=\"browser\";export{adapter,environment,getIt};","map":{"version":3,"names":["middlewareReducer","middleware","applyMiddleware","hook","defaultValue","bailEarly","value","_len","arguments","length","args","Array","_key","i","handler","apply","concat","createPubSub","subscribers","Object","create","nextId","subscribe","subscriber","id","unsubscribe","publish","event","channelNames","middlehooks","createRequester","initMiddleware","httpRequest","loadedMiddleware","reduce","ware","name","processOptions","validateOptions","request","opts","onResponse","reqErr","res","ctx","error","response","err","channels","target","options","context","ongoingRequest","abort","returnValue","use","newMiddleware","Error","onReturn","forEach","key","push","clone","_method","_url","_resHeaders","_headers","_controller","_init","FetchXhr","_classCallCheck","__publicField","__privateAdd","_createClass","open","method","url","_async","__privateSet","readyState","onreadystatechange","__privateGet","getAllResponseHeaders","setRequestHeader","setInit","init","send","body","_this","textBody","responseType","_objectSpread","headers","AbortController","EventTarget","signal","document","credentials","withCredentials","fetch","then","status","statusText","text","arrayBuffer","resBody","responseText","catch","_a","onabort","onerror","call","WeakMap","adapter","XMLHttpRequest","XmlHttpRequest","httpRequester","callback","timers","injectedResponse","cbTimer","setTimeout","cancel","clearTimeout","xhr","delays","timeout","aborted","loaded","timedOut","onError","lengthComputable","total","ontimeout","stopTimers","resetTimers","onLoad","hasOwnProperty","rawBody","connect","timeoutRequest","code","socket","force","isNetworkError","reduceResponse","parseHeaders","statusCode","statusMessage","getIt","undefined","environment"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/util/middlewareReducer.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/util/pubsub.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/createRequester.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/request/browser/fetchXhr.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/request/browser-request.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/get-it/src/index.browser.ts"],"sourcesContent":["import type {ApplyMiddleware, MiddlewareReducer} from '../types'\n\nexport const middlewareReducer = (middleware: MiddlewareReducer) =>\n  function applyMiddleware(hook, defaultValue, ...args) {\n    const bailEarly = hook === 'onError'\n\n    let value = defaultValue\n    for (let i = 0; i < middleware[hook].length; i++) {\n      const handler = middleware[hook][i]\n      // @ts-expect-error -- find a better way to deal with argument tuples\n      value = handler(value, ...args)\n\n      if (bailEarly && !value) {\n        break\n      }\n    }\n\n    return value\n  } as ApplyMiddleware\n","// Code borrowed from https://github.com/bjoerge/nano-pubsub\n\nimport type {PubSub, Subscriber} from '../types'\n\nexport function createPubSub<Message = void>(): PubSub<Message> {\n  const subscribers: {[id: string]: Subscriber<Message>} = Object.create(null)\n  let nextId = 0\n  function subscribe(subscriber: Subscriber<Message>) {\n    const id = nextId++\n    subscribers[id] = subscriber\n    return function unsubscribe() {\n      delete subscribers[id]\n    }\n  }\n\n  function publish(event: Message) {\n    for (const id in subscribers) {\n      subscribers[id](event)\n    }\n  }\n\n  return {\n    publish,\n    subscribe,\n  }\n}\n","import {processOptions} from './middleware/defaultOptionsProcessor'\nimport {validateOptions} from './middleware/defaultOptionsValidator'\nimport type {\n  HttpContext,\n  HttpRequest,\n  HttpRequestOngoing,\n  Middleware,\n  MiddlewareChannels,\n  MiddlewareHooks,\n  MiddlewareReducer,\n  MiddlewareResponse,\n  Middlewares,\n  Requester,\n  RequestOptions,\n} from './types'\nimport {middlewareReducer} from './util/middlewareReducer'\nimport {createPubSub} from './util/pubsub'\n\nconst channelNames = [\n  'request',\n  'response',\n  'progress',\n  'error',\n  'abort',\n] satisfies (keyof MiddlewareChannels)[]\nconst middlehooks = [\n  'processOptions',\n  'validateOptions',\n  'interceptRequest',\n  'finalizeOptions',\n  'onRequest',\n  'onResponse',\n  'onError',\n  'onReturn',\n  'onHeaders',\n] satisfies (keyof MiddlewareHooks)[]\n\n/** @public */\nexport function createRequester(initMiddleware: Middlewares, httpRequest: HttpRequest): Requester {\n  const loadedMiddleware: Middlewares = []\n  const middleware: MiddlewareReducer = middlehooks.reduce(\n    (ware, name) => {\n      ware[name] = ware[name] || []\n      return ware\n    },\n    {\n      processOptions: [processOptions],\n      validateOptions: [validateOptions],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any\n  )\n\n  function request(opts: RequestOptions | string) {\n    const onResponse = (reqErr: Error | null, res: MiddlewareResponse, ctx: HttpContext) => {\n      let error = reqErr\n      let response: MiddlewareResponse | null = res\n\n      // We're processing non-errors first, in case a middleware converts the\n      // response into an error (for instance, status >= 400 == HttpError)\n      if (!error) {\n        try {\n          response = applyMiddleware('onResponse', res, ctx)\n        } catch (err: any) {\n          response = null\n          error = err\n        }\n      }\n\n      // Apply error middleware - if middleware return the same (or a different) error,\n      // publish as an error event. If we *don't* return an error, assume it has been handled\n      error = error && applyMiddleware('onError', error, ctx)\n\n      // Figure out if we should publish on error/response channels\n      if (error) {\n        channels.error.publish(error)\n      } else if (response) {\n        channels.response.publish(response)\n      }\n    }\n\n    const channels: MiddlewareChannels = channelNames.reduce((target, name) => {\n      target[name] = createPubSub() as MiddlewareChannels[typeof name]\n      return target\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, {} as any)\n\n    // Prepare a middleware reducer that can be reused throughout the lifecycle\n    const applyMiddleware = middlewareReducer(middleware)\n\n    // Parse the passed options\n    const options = applyMiddleware('processOptions', opts as RequestOptions)\n\n    // Validate the options\n    applyMiddleware('validateOptions', options)\n\n    // Build a context object we can pass to child handlers\n    const context = {options, channels, applyMiddleware}\n\n    // We need to hold a reference to the current, ongoing request,\n    // in order to allow cancellation. In the case of the retry middleware,\n    // a new request might be triggered\n    let ongoingRequest: HttpRequestOngoing | undefined\n    const unsubscribe = channels.request.subscribe((ctx) => {\n      // Let request adapters (node/browser) perform the actual request\n      ongoingRequest = httpRequest(ctx, (err, res) => onResponse(err, res!, ctx))\n    })\n\n    // If we abort the request, prevent further requests from happening,\n    // and be sure to cancel any ongoing request (obviously)\n    channels.abort.subscribe(() => {\n      unsubscribe()\n      if (ongoingRequest) {\n        ongoingRequest.abort()\n      }\n    })\n\n    // See if any middleware wants to modify the return value - for instance\n    // the promise or observable middlewares\n    const returnValue = applyMiddleware('onReturn', channels, context)\n\n    // If return value has been modified by a middleware, we expect the middleware\n    // to publish on the 'request' channel. If it hasn't been modified, we want to\n    // trigger it right away\n    if (returnValue === channels) {\n      channels.request.publish(context)\n    }\n\n    return returnValue\n  }\n\n  request.use = function use(newMiddleware: Middleware) {\n    if (!newMiddleware) {\n      throw new Error('Tried to add middleware that resolved to falsey value')\n    }\n\n    if (typeof newMiddleware === 'function') {\n      throw new Error(\n        'Tried to add middleware that was a function. It probably expects you to pass options to it.'\n      )\n    }\n\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error(\n        'Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event'\n      )\n    }\n\n    middlehooks.forEach((key) => {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key] as any)\n      }\n    })\n\n    loadedMiddleware.push(newMiddleware)\n    return request\n  }\n\n  request.clone = () => createRequester(loadedMiddleware, httpRequest)\n\n  initMiddleware.forEach(request.use)\n\n  return request\n}\n","/**\n * Mimicks the XMLHttpRequest API with only the parts needed for get-it's XHR adapter\n */\nexport class FetchXhr\n  implements Pick<XMLHttpRequest, 'open' | 'abort' | 'getAllResponseHeaders' | 'setRequestHeader'>\n{\n  /**\n   * Public interface, interop with real XMLHttpRequest\n   */\n  onabort: () => void\n  onerror: (error?: any) => void\n  onreadystatechange: () => void\n  ontimeout: XMLHttpRequest['ontimeout']\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n   */\n  readyState: 0 | 1 | 2 | 3 | 4 = 0\n  response: XMLHttpRequest['response']\n  responseText: XMLHttpRequest['responseText']\n  responseType: XMLHttpRequest['responseType'] = ''\n  status: XMLHttpRequest['status']\n  statusText: XMLHttpRequest['statusText']\n  withCredentials: XMLHttpRequest['withCredentials']\n\n  /**\n   * Private implementation details\n   */\n  #method: string\n  #url: string\n  #resHeaders: string\n  #headers: Record<string, string> = {}\n  #controller?: AbortController\n  #init: RequestInit = {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n  open(method: string, url: string, _async?: boolean) {\n    this.#method = method\n    this.#url = url\n    this.#resHeaders = ''\n    this.readyState = 1 // Open\n    this.onreadystatechange()\n    this.#controller = undefined\n  }\n  abort() {\n    if (this.#controller) {\n      this.#controller.abort()\n    }\n  }\n  getAllResponseHeaders() {\n    return this.#resHeaders\n  }\n  setRequestHeader(name: string, value: string) {\n    this.#headers[name] = value\n  }\n  // Allow setting extra fetch init options, needed for runtimes such as Vercel Edge to set `cache` and other options in React Server Components\n  setInit(init: RequestInit) {\n    this.#init = init\n  }\n  send(body: BodyInit) {\n    const textBody = this.responseType !== 'arraybuffer'\n    const options: RequestInit = {\n      ...this.#init,\n      method: this.#method,\n      headers: this.#headers,\n      body,\n    }\n    if (typeof AbortController === 'function') {\n      this.#controller = new AbortController()\n      // The instanceof check ensures environments like Edge Runtime, Node 18 with built-in fetch\n      // and more don't throw if `signal` doesn't implement`EventTarget`\n      // Native browser AbortSignal implements EventTarget, so we can use it\n      if (typeof EventTarget !== 'undefined' && this.#controller.signal instanceof EventTarget) {\n        options.signal = this.#controller.signal\n      }\n    }\n\n    // Some environments (like CloudFlare workers) don't support credentials in\n    // RequestInitDict, and there doesn't seem to be any easy way to check for it,\n    // so for now let's just make do with a document check :/\n    if (typeof document !== 'undefined') {\n      options.credentials = this.withCredentials ? 'include' : 'omit'\n    }\n\n    fetch(this.#url, options)\n      .then((res): Promise<string | ArrayBuffer> => {\n        res.headers.forEach((value: any, key: any) => {\n          this.#resHeaders += `${key}: ${value}\\r\\n`\n        })\n        this.status = res.status\n        this.statusText = res.statusText\n        this.readyState = 3 // Loading\n        return textBody ? res.text() : res.arrayBuffer()\n      })\n      .then((resBody) => {\n        if (typeof resBody === 'string') {\n          this.responseText = resBody\n        } else {\n          this.response = resBody\n        }\n        this.readyState = 4 // Done\n        this.onreadystatechange()\n      })\n      .catch((err: Error) => {\n        if (err.name === 'AbortError') {\n          this.onabort()\n          return\n        }\n\n        this.onerror?.(err)\n      })\n  }\n}\n","import parseHeaders from 'parse-headers'\n\nimport type {HttpRequest, MiddlewareResponse, RequestAdapter, RequestOptions} from '../types'\nimport {FetchXhr} from './browser/fetchXhr'\n\n// Use fetch if it's available, non-browser environments such as Deno, Edge Runtime and more provide fetch as a global but doesn't provide xhr\nexport const adapter: RequestAdapter = typeof XMLHttpRequest === 'function' ? 'xhr' : 'fetch'\n\n// Fallback to fetch-based XHR polyfill for non-browser environments like Workers\nconst XmlHttpRequest = adapter === 'xhr' ? XMLHttpRequest : FetchXhr\n\nexport const httpRequester: HttpRequest = (context, callback) => {\n  const opts = context.options\n  const options = context.applyMiddleware('finalizeOptions', opts) as RequestOptions\n  const timers: any = {}\n\n  // Allow middleware to inject a response, for instance in the case of caching or mocking\n  const injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n    adapter,\n    context,\n  })\n\n  // If middleware injected a response, treat it as we normally would and return it\n  // Do note that the injected response has to be reduced to a cross-environment friendly response\n  if (injectedResponse) {\n    const cbTimer = setTimeout(callback, 0, null, injectedResponse)\n    const cancel = () => clearTimeout(cbTimer)\n    return {abort: cancel}\n  }\n\n  // We'll want to null out the request on success/failure\n  let xhr = new XmlHttpRequest()\n\n  if (xhr instanceof FetchXhr && typeof options.fetch === 'object') {\n    xhr.setInit(options.fetch)\n  }\n\n  const headers = options.headers\n  const delays = options.timeout\n\n  // Request state\n  let aborted = false\n  let loaded = false\n  let timedOut = false\n\n  // Apply event handlers\n  xhr.onerror = (event: ProgressEvent) => {\n    onError(\n      new Error(\n        `Request error while attempting to reach ${options.url}${\n          event.lengthComputable ? `(${event.loaded} of ${event.total} bytes transferred)` : ''\n        }`\n      )\n    )\n  }\n  xhr.ontimeout = (event: ProgressEvent) => {\n    onError(\n      new Error(\n        `Request timeout while attempting to reach ${options.url}${\n          event.lengthComputable ? `(${event.loaded} of ${event.total} bytes transferred)` : ''\n        }`\n      )\n    )\n  }\n  xhr.onabort = () => {\n    stopTimers(true)\n    aborted = true\n  }\n\n  xhr.onreadystatechange = () => {\n    // Prevent request from timing out\n    resetTimers()\n\n    if (aborted || xhr.readyState !== 4) {\n      return\n    }\n\n    // Will be handled by onError\n    if (xhr.status === 0) {\n      return\n    }\n\n    onLoad()\n  }\n\n  // @todo two last options to open() is username/password\n  xhr.open(\n    options.method!,\n    options.url,\n    true // Always async\n  )\n\n  // Some options need to be applied after open\n  xhr.withCredentials = !!options.withCredentials\n\n  // Set headers\n  if (headers && xhr.setRequestHeader) {\n    for (const key in headers) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key])\n      }\n    }\n  }\n\n  if (options.rawBody) {\n    xhr.responseType = 'arraybuffer'\n  }\n\n  // Let middleware know we're about to do a request\n  context.applyMiddleware('onRequest', {options, adapter, request: xhr, context})\n\n  xhr.send(options.body || null)\n\n  // Figure out which timeouts to use (if any)\n  if (delays) {\n    timers.connect = setTimeout(() => timeoutRequest('ETIMEDOUT'), delays.connect)\n  }\n\n  return {abort}\n\n  function abort() {\n    aborted = true\n\n    if (xhr) {\n      xhr.abort()\n    }\n  }\n\n  function timeoutRequest(code: any) {\n    timedOut = true\n    xhr.abort()\n    const error: any = new Error(\n      code === 'ESOCKETTIMEDOUT'\n        ? `Socket timed out on request to ${options.url}`\n        : `Connection timed out on request to ${options.url}`\n    )\n    error.code = code\n    context.channels.error.publish(error)\n  }\n\n  function resetTimers() {\n    if (!delays) {\n      return\n    }\n\n    stopTimers()\n    timers.socket = setTimeout(() => timeoutRequest('ESOCKETTIMEDOUT'), delays.socket)\n  }\n\n  function stopTimers(force?: boolean) {\n    // Only clear the connect timeout if we've got a connection\n    if (force || aborted || (xhr.readyState >= 2 && timers.connect)) {\n      clearTimeout(timers.connect)\n    }\n\n    if (timers.socket) {\n      clearTimeout(timers.socket)\n    }\n  }\n\n  function onError(error: Error) {\n    if (loaded) {\n      return\n    }\n\n    // Clean up\n    stopTimers(true)\n    loaded = true\n    ;(xhr as any) = null\n\n    // Annoyingly, details are extremely scarce and hidden from us.\n    // We only really know that it is a network error\n    const err = (error ||\n      new Error(`Network error while attempting to reach ${options.url}`)) as Error & {\n      isNetworkError: boolean\n      request?: typeof options\n    }\n    err.isNetworkError = true\n    err.request = options\n    callback(err)\n  }\n\n  function reduceResponse(): MiddlewareResponse {\n    return {\n      body:\n        xhr.response ||\n        (xhr.responseType === '' || xhr.responseType === 'text' ? xhr.responseText : ''),\n      url: options.url,\n      method: options.method!,\n      headers: parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: xhr.status,\n      statusMessage: xhr.statusText,\n    }\n  }\n\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return\n    }\n\n    if (xhr.status === 0) {\n      onError(new Error('Unknown XHR error'))\n      return\n    }\n\n    // Prevent being called twice\n    stopTimers()\n    loaded = true\n    callback(null, reduceResponse())\n  }\n}\n","import {createRequester} from './createRequester'\nimport {httpRequester} from './request/browser-request'\nimport type {ExportEnv, HttpRequest, Middlewares, Requester} from './types'\n\nexport type * from './types'\n\n/** @public */\nexport const getIt = (\n  initMiddleware: Middlewares = [],\n  httpRequest: HttpRequest = httpRequester\n): Requester => createRequester(initMiddleware, httpRequest)\n\n/** @public */\nexport const environment: ExportEnv = 'browser'\n\n/** @public */\nexport {adapter} from './request/browser-request'\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}