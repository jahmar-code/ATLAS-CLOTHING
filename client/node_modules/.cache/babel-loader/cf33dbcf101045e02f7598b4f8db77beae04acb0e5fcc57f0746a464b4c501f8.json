{"ast":null,"code":"import{__extends}from\"tslib\";import{Scheduler}from'../Scheduler';var AsyncScheduler=function(_super){__extends(AsyncScheduler,_super);function AsyncScheduler(SchedulerAction,now){if(now===void 0){now=Scheduler.now;}var _this=_super.call(this,SchedulerAction,now)||this;_this.actions=[];_this._active=false;return _this;}AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this._active){actions.push(action);return;}var error;this._active=true;do{if(error=action.execute(action.state,action.delay)){break;}}while(action=actions.shift());this._active=false;if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};return AsyncScheduler;}(Scheduler);export{AsyncScheduler};","map":{"version":3,"names":["Scheduler","AsyncScheduler","_super","__extends","SchedulerAction","now","_this","call","actions","_active","prototype","flush","action","push","error","execute","state","delay","shift","unsubscribe"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"],"mappings":"6BAAA,OAASA,SAAS,KAAQ,cAAc,CAKxC,IAAAC,cAAA,UAAAC,MAAA,EAAoCC,SAAA,CAAAF,cAAA,CAAAC,MAAA,EAkBlC,SAAAD,eAAYG,eAA8B,CAAEC,GAAiC,EAAjC,GAAAA,GAAA,WAAAA,GAAA,CAAoBL,SAAS,CAACK,GAAG,EAA7E,IAAAC,KAAA,CACEJ,MAAA,CAAAK,IAAA,MAAMH,eAAe,CAAEC,GAAG,CAAC,OAlBtBC,KAAA,CAAAE,OAAO,CAA4B,EAAE,CAOrCF,KAAA,CAAAG,OAAO,CAAY,KAAK,C,aAY/B,CAEOR,cAAA,CAAAS,SAAA,CAAAC,KAAK,CAAZ,SAAaC,MAAwB,EAC3B,IAAAJ,OAAO,CAAK,IAAI,CAAAA,OAAT,CAEf,GAAI,IAAI,CAACC,OAAO,CAAE,CAChBD,OAAO,CAACK,IAAI,CAACD,MAAM,CAAC,CACpB,O,CAGF,GAAI,CAAAE,KAAU,CACd,IAAI,CAACL,OAAO,CAAG,IAAI,CAEnB,EAAG,CACD,GAAKK,KAAK,CAAGF,MAAM,CAACG,OAAO,CAACH,MAAM,CAACI,KAAK,CAAEJ,MAAM,CAACK,KAAK,CAAC,CAAG,CACxD,M,EAEH,MAASL,MAAM,CAAGJ,OAAO,CAACU,KAAK,EAAG,EAEnC,IAAI,CAACT,OAAO,CAAG,KAAK,CAEpB,GAAIK,KAAK,CAAE,CACT,MAAQF,MAAM,CAAGJ,OAAO,CAACU,KAAK,EAAG,CAAG,CAClCN,MAAM,CAACO,WAAW,EAAE,C,CAEtB,KAAM,CAAAL,KAAK,C,CAEf,CAAC,CACH,OAAAb,cAAC,CAAD,CAAC,CAhDmCD,SAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}