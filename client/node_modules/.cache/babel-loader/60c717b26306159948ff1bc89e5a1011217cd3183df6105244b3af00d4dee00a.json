{"ast":null,"code":"import{__read,__spreadArray,__values}from\"tslib\";import{isFunction}from'./util/isFunction';import{UnsubscriptionError}from'./util/UnsubscriptionError';import{arrRemove}from'./util/arrRemove';var Subscription=function(){function Subscription(initialTeardown){this.initialTeardown=initialTeardown;this.closed=false;this._parentage=null;this._finalizers=null;}Subscription.prototype.unsubscribe=function(){var e_1,_a,e_2,_b;var errors;if(!this.closed){this.closed=true;var _parentage=this._parentage;if(_parentage){this._parentage=null;if(Array.isArray(_parentage)){try{for(var _parentage_1=__values(_parentage),_parentage_1_1=_parentage_1.next();!_parentage_1_1.done;_parentage_1_1=_parentage_1.next()){var parent_1=_parentage_1_1.value;parent_1.remove(this);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_parentage_1_1&&!_parentage_1_1.done&&(_a=_parentage_1.return))_a.call(_parentage_1);}finally{if(e_1)throw e_1.error;}}}else{_parentage.remove(this);}}var initialFinalizer=this.initialTeardown;if(isFunction(initialFinalizer)){try{initialFinalizer();}catch(e){errors=e instanceof UnsubscriptionError?e.errors:[e];}}var _finalizers=this._finalizers;if(_finalizers){this._finalizers=null;try{for(var _finalizers_1=__values(_finalizers),_finalizers_1_1=_finalizers_1.next();!_finalizers_1_1.done;_finalizers_1_1=_finalizers_1.next()){var finalizer=_finalizers_1_1.value;try{execFinalizer(finalizer);}catch(err){errors=errors!==null&&errors!==void 0?errors:[];if(err instanceof UnsubscriptionError){errors=__spreadArray(__spreadArray([],__read(errors)),__read(err.errors));}else{errors.push(err);}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_finalizers_1_1&&!_finalizers_1_1.done&&(_b=_finalizers_1.return))_b.call(_finalizers_1);}finally{if(e_2)throw e_2.error;}}}if(errors){throw new UnsubscriptionError(errors);}}};Subscription.prototype.add=function(teardown){var _a;if(teardown&&teardown!==this){if(this.closed){execFinalizer(teardown);}else{if(teardown instanceof Subscription){if(teardown.closed||teardown._hasParent(this)){return;}teardown._addParent(this);}(this._finalizers=(_a=this._finalizers)!==null&&_a!==void 0?_a:[]).push(teardown);}}};Subscription.prototype._hasParent=function(parent){var _parentage=this._parentage;return _parentage===parent||Array.isArray(_parentage)&&_parentage.includes(parent);};Subscription.prototype._addParent=function(parent){var _parentage=this._parentage;this._parentage=Array.isArray(_parentage)?(_parentage.push(parent),_parentage):_parentage?[_parentage,parent]:parent;};Subscription.prototype._removeParent=function(parent){var _parentage=this._parentage;if(_parentage===parent){this._parentage=null;}else if(Array.isArray(_parentage)){arrRemove(_parentage,parent);}};Subscription.prototype.remove=function(teardown){var _finalizers=this._finalizers;_finalizers&&arrRemove(_finalizers,teardown);if(teardown instanceof Subscription){teardown._removeParent(this);}};Subscription.EMPTY=function(){var empty=new Subscription();empty.closed=true;return empty;}();return Subscription;}();export{Subscription};export var EMPTY_SUBSCRIPTION=Subscription.EMPTY;export function isSubscription(value){return value instanceof Subscription||value&&'closed'in value&&isFunction(value.remove)&&isFunction(value.add)&&isFunction(value.unsubscribe);}function execFinalizer(finalizer){if(isFunction(finalizer)){finalizer();}else{finalizer.unsubscribe();}}","map":{"version":3,"names":["isFunction","UnsubscriptionError","arrRemove","Subscription","initialTeardown","closed","_parentage","_finalizers","prototype","unsubscribe","errors","Array","isArray","_parentage_1","__values","_parentage_1_1","next","done","parent_1","value","remove","initialFinalizer","e","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","err","__spreadArray","__read","push","add","teardown","_hasParent","_addParent","_a","parent","includes","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/Subscription.ts"],"sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}