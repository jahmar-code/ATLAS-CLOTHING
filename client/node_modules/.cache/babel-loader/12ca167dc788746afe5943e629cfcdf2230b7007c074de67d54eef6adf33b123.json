{"ast":null,"code":"import{EmptyError}from'../util/EmptyError';import{filter}from'./filter';import{take}from'./take';import{defaultIfEmpty}from'./defaultIfEmpty';import{throwIfEmpty}from'./throwIfEmpty';import{identity}from'../util/identity';export function first(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter(function(v,i){return predicate(v,i,source);}):identity,take(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty(function(){return new EmptyError();}));};}","map":{"version":3,"names":["EmptyError","filter","take","defaultIfEmpty","throwIfEmpty","identity","first","predicate","defaultValue","hasDefaultValue","arguments","length","source","pipe","v","i"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/operators/first.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n"],"mappings":"AACA,OAASA,UAAU,KAAQ,oBAAoB,CAE/C,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,IAAI,KAAQ,QAAQ,CAC7B,OAASC,cAAc,KAAQ,kBAAkB,CACjD,OAASC,YAAY,KAAQ,gBAAgB,CAC7C,OAASC,QAAQ,KAAQ,kBAAkB,CAyE3C,MAAM,SAAU,CAAAC,KAAKA,CACnBC,SAAgF,CAChFC,YAAgB,EAEhB,GAAM,CAAAC,eAAe,CAAGC,SAAS,CAACC,MAAM,EAAI,CAAC,CAC7C,MAAO,UAACC,MAAqB,EAC3B,OAAAA,MAAM,CAACC,IAAI,CACTN,SAAS,CAAGN,MAAM,CAAC,SAACa,CAAC,CAAEC,CAAC,EAAK,OAAAR,SAAS,CAACO,CAAC,CAAEC,CAAC,CAAEH,MAAM,CAAC,CAAvB,CAAuB,CAAC,CAAGP,QAAQ,CAChEH,IAAI,CAAC,CAAC,CAAC,CACPO,eAAe,CAAGN,cAAc,CAACK,YAAa,CAAC,CAAGJ,YAAY,CAAC,WAAM,UAAI,CAAAJ,UAAU,EAAE,CAAhB,CAAgB,CAAC,CACvF,CAJD,CAIC,CACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}