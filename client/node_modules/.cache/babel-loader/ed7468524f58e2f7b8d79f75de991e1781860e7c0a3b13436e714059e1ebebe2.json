{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var SequenceError = createErrorClass(_c = function (_super) {\n  return function SequenceErrorImpl(message) {\n    _super(this);\n    this.name = 'SequenceError';\n    this.message = message;\n  };\n});\n_c2 = SequenceError;\nvar _c, _c2;\n$RefreshReg$(_c, \"SequenceError$createErrorClass\");\n$RefreshReg$(_c2, \"SequenceError\");","map":{"version":3,"names":["createErrorClass","SequenceError","_c","_super","SequenceErrorImpl","message","name","_c2","$RefreshReg$"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/src/thistle-lion/node_modules/rxjs/src/internal/util/SequenceError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAoBrD,OAAO,IAAMC,aAAa,GAAsBD,gBAAgB,CAAAE,EAAA,GAC9D,SAAAA,CAACC,MAAM;EACL,gBAASC,iBAAiBA,CAAYC,OAAe;IACnDF,MAAM,CAAC,IAAI,CAAC;IACZ,IAAI,CAACG,IAAI,GAAG,eAAe;IAC3B,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB,CAAC;AAJD,CAIC,CACJ;AAACE,GAAA,GAPWN,aAAa;AAAA,IAAAC,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}