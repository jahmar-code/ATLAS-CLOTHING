{"ast":null,"code":"import{Observable}from'../Observable';import{iterator as Symbol_iterator}from'../symbol/iterator';import{isFunction}from'../util/isFunction';import{executeSchedule}from'../util/executeSchedule';export function scheduleIterable(input,scheduler){return new Observable(function(subscriber){var iterator;executeSchedule(subscriber,scheduler,function(){iterator=input[Symbol_iterator]();executeSchedule(subscriber,scheduler,function(){var _a;var value;var done;try{_a=iterator.next(),value=_a.value,done=_a.done;}catch(err){subscriber.error(err);return;}if(done){subscriber.complete();}else{subscriber.next(value);}},0,true);});return function(){return isFunction(iterator===null||iterator===void 0?void 0:iterator.return)&&iterator.return();};});}","map":{"version":3,"names":["Observable","iterator","Symbol_iterator","isFunction","executeSchedule","scheduleIterable","input","scheduler","subscriber","value","done","_a","next","err","error","complete","return"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,eAAe,CAE1C,OAASC,QAAQ,GAAI,CAAAC,eAAe,KAAQ,oBAAoB,CAChE,OAASC,UAAU,KAAQ,oBAAoB,CAC/C,OAASC,eAAe,KAAQ,yBAAyB,CAOzD,MAAM,SAAU,CAAAC,gBAAgBA,CAAIC,KAAkB,CAAEC,SAAwB,EAC9E,MAAO,IAAI,CAAAP,UAAU,CAAI,SAACQ,UAAU,EAClC,GAAI,CAAAP,QAAwB,CAK5BG,eAAe,CAACI,UAAU,CAAED,SAAS,CAAE,WAErCN,QAAQ,CAAIK,KAAa,CAACJ,eAAe,CAAC,EAAE,CAE5CE,eAAe,CACbI,UAAU,CACVD,SAAS,CACT,W,OACE,GAAI,CAAAE,KAAQ,CACZ,GAAI,CAAAC,IAAyB,CAC7B,GAAI,CAEDC,EAAA,CAAkBV,QAAQ,CAACW,IAAI,EAAE,CAA/BH,KAAK,CAAAE,EAAA,CAAAF,KAAA,CAAEC,IAAI,CAAAC,EAAA,CAAAD,IAAA,C,CACd,MAAOG,GAAG,CAAE,CAEZL,UAAU,CAACM,KAAK,CAACD,GAAG,CAAC,CACrB,O,CAGF,GAAIH,IAAI,CAAE,CAKRF,UAAU,CAACO,QAAQ,EAAE,C,CACtB,IAAM,CAELP,UAAU,CAACI,IAAI,CAACH,KAAK,CAAC,C,CAE1B,CAAC,CACD,CAAC,CACD,IAAI,CACL,CACH,CAAC,CAAC,CAMF,MAAO,YAAM,OAAAN,UAAU,CAACF,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEe,MAAM,CAAC,EAAIf,QAAQ,CAACe,MAAM,EAAE,CAAjD,CAAiD,CAChE,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}