{"ast":null,"code":"import{__read,__spreadArray}from\"tslib\";import{raceInit}from'../observable/race';import{operate}from'../util/lift';import{identity}from'../util/identity';export function raceWith(){var otherSources=[];for(var _i=0;_i<arguments.length;_i++){otherSources[_i]=arguments[_i];}return!otherSources.length?identity:operate(function(source,subscriber){raceInit(__spreadArray([source],__read(otherSources)))(subscriber);});}","map":{"version":3,"names":["raceInit","operate","identity","raceWith","otherSources","_i","arguments","length","source","subscriber","__spreadArray","__read"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/operators/raceWith.ts"],"sourcesContent":["import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n"],"mappings":"wCACA,OAASA,QAAQ,KAAQ,oBAAoB,CAC7C,OAASC,OAAO,KAAQ,cAAc,CACtC,OAASC,QAAQ,KAAQ,kBAAkB,CA4B3C,MAAM,SAAU,CAAAC,QAAQA,CAAA,EACtB,IAAAC,YAAA,I,IAAA,IAAAC,EAAA,EAA6C,CAA7CA,EAAA,CAAAC,SAAA,CAAAC,MAA6C,CAA7CF,EAAA,EAA6C,EAA7CD,YAAA,CAAAC,EAAA,EAAAC,SAAA,CAAAD,EAAA,E,CAEA,MAAO,CAACD,YAAY,CAACG,MAAM,CACvBL,QAAQ,CACRD,OAAO,CAAC,SAACO,MAAM,CAAEC,UAAU,EACzBT,QAAQ,CAAAU,aAAA,EAAiBF,MAAM,EAAAG,MAAA,CAAKP,YAAY,GAAE,CAACK,UAAU,CAAC,CAChE,CAAC,CAAC,CACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}