{"ast":null,"code":"var _jsxFileName = \"/Users/jawaadahmar/Desktop/atlas-clothing/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\n//import { useFetch } from '../../hooks/useFetch'\n//import ClothingList from '../../components_original/ClothingList'\n\n//import { db, storage } from '../../firebase/config'\n//import { collection, getDocs } from 'firebase/firestore'\n\n//import { ref, getDownloadURL } from \"firebase/storage\";\n\nimport './Home.css';\nimport { useEffect, useState } from 'react';\n//import blackguyshirt from '../../assets/images/blackguyshirt.jpeg'\n\nimport { Product, FooterBanner, HeroBanner } from '../../components';\nimport { client } from '../../lib/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n  let {\n    productResult,\n    bannerResult\n  } = _ref;\n  //const [clothes, setClothes] = useState(null)\n\n  // useEffect(() => {\n  //     const ref = collection(db, 'clothing')\n  //     //const img = storage.ref()\n\n  //     getDocs(ref)\n  //         .then((snapshot) => {\n  //             let results =[]\n  //             snapshot.docs.forEach(doc => {\n  //                 results.push({id: doc.id, ...doc.data()})\n  //             })\n  //             setClothes(results)\n\n  //         })\n  // }, [])\n\n  // useEffect(() => {\n  //     const query = '*[_type == \"projects\"]'\n\n  //     client.fetch(query)\n  //       .then((data) => setProjects(data))\n  // }, [])\n\n  // useEffect(() => {\n  //   const interval= setInterval(()=>{\n  //     const fetchdata = async () => {\n  //       const res = await fetch(\"url\")\n  //       const data = await res.json()\n  //       setsongs(data)\n  //     }\n  //     fetchdata()\n  //    },15000)\n  //    return()=>clearInterval(interval)\n\n  const [products, setProducts] = useState(null);\n  const [bannerData, setBannerData] = useState(null);\n\n  //  useEffect(() => {\n  //    client\n  //      .fetch(\n  //        `*[_type == \"product\"]{\n  //       image{\n  //         asset->{\n  //           _id,\n  //           url\n  //         },\n  //       },\n  //       name,\n  //       slug,\n  //       price,\n  //       details,\n  //    }`\n  //      )\n  //      .then((data) => setProducts(data))\n  //      .catch(console.error);\n  //  }, []);\n\n  //  useEffect(() => {\n  //   client\n  //     .fetch(\n  //       `*[_type == \"banner\"]{\n  //      image{\n  //        asset->{\n  //          _id,\n  //          url\n  //        },\n  //      },\n  //      buttonText,\n  //      product,\n  //      desc,\n  //      smallText,\n  //      midText,\n  //      largeText1,\n  //      largeText2,\n  //      discount,\n  //      saleTime,\n  //   }`\n  //     )\n  //     .then((data) => setBannerData(data))\n  //     .catch(console.error);\n  //     console.log(bannerData)\n  // }, []);\n  //    useEffect(async () => {\n  //     const query = '*[_type == \"projects\"]'\n  //     const product = await client.fetch(query)\n\n  //     client.fetch(query)\n  //       .then((data) => setProducts(data))\n  // }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const query = '*[_type == \"product\"]'; // Modify this query based on your schema\n        const productResult = await client.fetch(query);\n        setProducts(productResult);\n        const bannerQuery = '*[_type == \"banner\"]'; // Modify this query based on your schema\n        const bannerResult = await client.fetch(bannerQuery);\n        setBannerData(bannerResult);\n      } catch (error) {\n        console.error('Error fetching data from Sanity:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(bannerResult, \"hello\");\n  return (\n    /*#__PURE__*/\n    // <div className='home'>\n    //     <img src={blackguyshirt}></img>\n    //     {clothes && <ClothingList clothes={clothes} />} \n    // </div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeroBanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Best Selling Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Speakers of many variations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-container\",\n        children: productResult === null || productResult === void 0 ? void 0 : productResult.map(product => /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FooterBanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(Home, \"6eQaBk0XgTyHdoXmtRn3+BYleII=\");\n_c = Home;\nexport const getServerSideProps = async () => {\n  const query = '*[_type == \"product\"]'; // Modify this query based on your schema\n  const productResult = await client.fetch(query);\n  const bannerQuery = '*[_type == \"banner\"]'; // Modify this query based on your schema\n  const bannerResult = await client.fetch(bannerQuery);\n  return {\n    props: {\n      productResult,\n      bannerResult\n    }\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Product","FooterBanner","HeroBanner","client","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_ref","_s","productResult","bannerResult","products","setProducts","bannerData","setBannerData","fetchData","query","fetch","bannerQuery","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","product","_c","getServerSideProps","props","$RefreshReg$"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/src/pages/home/Home.js"],"sourcesContent":["//import { useFetch } from '../../hooks/useFetch'\n//import ClothingList from '../../components_original/ClothingList'\n\n//import { db, storage } from '../../firebase/config'\n//import { collection, getDocs } from 'firebase/firestore'\n\n//import { ref, getDownloadURL } from \"firebase/storage\";\n\nimport './Home.css'\nimport { useEffect, useState } from 'react'\n//import blackguyshirt from '../../assets/images/blackguyshirt.jpeg'\n\n\nimport { Product, FooterBanner, HeroBanner } from '../../components'\n\nimport { client }  from '../../lib/client'\n\nexport default function Home({productResult,bannerResult}) {\n    //const [clothes, setClothes] = useState(null)\n\n    // useEffect(() => {\n    //     const ref = collection(db, 'clothing')\n    //     //const img = storage.ref()\n\n        \n    //     getDocs(ref)\n    //         .then((snapshot) => {\n    //             let results =[]\n    //             snapshot.docs.forEach(doc => {\n    //                 results.push({id: doc.id, ...doc.data()})\n    //             })\n    //             setClothes(results)\n                \n    //         })\n    // }, [])\n\n\n    \n\n    // useEffect(() => {\n    //     const query = '*[_type == \"projects\"]'\n\n    //     client.fetch(query)\n    //       .then((data) => setProjects(data))\n    // }, [])\n\n    // useEffect(() => {\n    //   const interval= setInterval(()=>{\n    //     const fetchdata = async () => {\n    //       const res = await fetch(\"url\")\n    //       const data = await res.json()\n    //       setsongs(data)\n    //     }\n    //     fetchdata()\n    //    },15000)\n    //    return()=>clearInterval(interval)\n\n\n    const [products, setProducts] = useState(null)\n    const [bannerData, setBannerData] = useState(null)\n       \n\n      //  useEffect(() => {\n      //    client\n      //      .fetch(\n      //        `*[_type == \"product\"]{\n      //       image{\n      //         asset->{\n      //           _id,\n      //           url\n      //         },\n      //       },\n      //       name,\n      //       slug,\n      //       price,\n      //       details,\n      //    }`\n      //      )\n      //      .then((data) => setProducts(data))\n      //      .catch(console.error);\n      //  }, []);\n\n      //  useEffect(() => {\n      //   client\n      //     .fetch(\n      //       `*[_type == \"banner\"]{\n      //      image{\n      //        asset->{\n      //          _id,\n      //          url\n      //        },\n      //      },\n      //      buttonText,\n      //      product,\n      //      desc,\n      //      smallText,\n      //      midText,\n      //      largeText1,\n      //      largeText2,\n      //      discount,\n      //      saleTime,\n      //   }`\n      //     )\n      //     .then((data) => setBannerData(data))\n      //     .catch(console.error);\n      //     console.log(bannerData)\n      // }, []);\n    //    useEffect(async () => {\n    //     const query = '*[_type == \"projects\"]'\n    //     const product = await client.fetch(query)\n\n    //     client.fetch(query)\n    //       .then((data) => setProducts(data))\n    // }, [])\n    \n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const query = '*[_type == \"product\"]'; // Modify this query based on your schema\n          const productResult = await client.fetch(query);\n          setProducts(productResult);\n          const bannerQuery = '*[_type == \"banner\"]'; // Modify this query based on your schema\n          const bannerResult = await client.fetch(bannerQuery);\n          setBannerData(bannerResult)\n          \n        } catch (error) {\n          console.error('Error fetching data from Sanity:', error);\n        }\n      };\n  \n      fetchData();\n    }, []); \n\n    console.log(bannerResult,\"hello\")\n  \n    \n  return (\n    // <div className='home'>\n    //     <img src={blackguyshirt}></img>\n    //     {clothes && <ClothingList clothes={clothes} />} \n    // </div>\n    <>\n    <HeroBanner />\n    <div className='products-heading'>\n        <h2>Best Selling Products</h2>\n        <p>Speakers of many variations</p>\n\n    </div>\n\n    <div className='products-container'>\n        {productResult?.map((product) => <Product />)}\n    </div>\n\n    <FooterBanner />\n    </>\n  )\n}\n\nexport const getServerSideProps = async () => {\n    const query = '*[_type == \"product\"]'; // Modify this query based on your schema\n    const productResult = await client.fetch(query);\n\n    const bannerQuery = '*[_type == \"banner\"]'; // Modify this query based on your schema\n    const bannerResult = await client.fetch(bannerQuery);\n\n    return {\n      props: { productResult, bannerResult }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}