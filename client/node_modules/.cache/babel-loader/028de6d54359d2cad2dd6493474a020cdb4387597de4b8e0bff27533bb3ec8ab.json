{"ast":null,"code":"(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=global||self,global.SanityImageUrlBuilder=factory());})(this,function(){function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var example='image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';function parseAssetId(ref){var _ref$split=ref.split('-'),id=_ref$split[1],dimensionString=_ref$split[2],format=_ref$split[3];if(!id||!dimensionString||!format){throw new Error(\"Malformed asset _ref '\"+ref+\"'. Expected an id like \\\"\"+example+\"\\\".\");}var _dimensionString$spli=dimensionString.split('x'),imgWidthStr=_dimensionString$spli[0],imgHeightStr=_dimensionString$spli[1];var width=+imgWidthStr;var height=+imgHeightStr;var isValidAssetId=isFinite(width)&&isFinite(height);if(!isValidAssetId){throw new Error(\"Malformed asset _ref '\"+ref+\"'. Expected an id like \\\"\"+example+\"\\\".\");}return{id:id,width:width,height:height,format:format};}var isRef=function isRef(src){var source=src;return source?typeof source._ref==='string':false;};var isAsset=function isAsset(src){var source=src;return source?typeof source._id==='string':false;};var isAssetStub=function isAssetStub(src){var source=src;return source&&source.asset?typeof source.asset.url==='string':false;};// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nfunction parseSource(source){if(!source){return null;}var image;if(typeof source==='string'&&isUrl(source)){// Someone passed an existing image url?\nimage={asset:{_ref:urlToId(source)}};}else if(typeof source==='string'){// Just an asset id\nimage={asset:{_ref:source}};}else if(isRef(source)){// We just got passed an asset directly\nimage={asset:source};}else if(isAsset(source)){// If we were passed an image asset document\nimage={asset:{_ref:source._id||''}};}else if(isAssetStub(source)){// If we were passed a partial asset (`url`, but no `_id`)\nimage={asset:{_ref:urlToId(source.asset.url)}};}else if(typeof source.asset==='object'){// Probably an actual image with materialized asset\nimage=_extends({},source);}else{// We got something that does not look like an image, or it is an image\n// that currently isn't sporting an asset.\nreturn null;}var img=source;if(img.crop){image.crop=img.crop;}if(img.hotspot){image.hotspot=img.hotspot;}return applyDefaults(image);}function isUrl(url){return /^https?:\\/\\//.test(\"\"+url);}function urlToId(url){var parts=url.split('/').slice(-1);return(\"image-\"+parts[0]).replace(/\\.([a-z]+)$/,'-$1');}// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image){if(image.crop&&image.hotspot){return image;}// We need to pad in default values for crop or hotspot\nvar result=_extends({},image);if(!result.crop){result.crop={left:0,top:0,bottom:0,right:0};}if(!result.hotspot){result.hotspot={x:0.5,y:0.5,height:1.0,width:1.0};}return result;}var SPEC_NAME_TO_URL_NAME_MAPPINGS=[['width','w'],['height','h'],['format','fm'],['download','dl'],['blur','blur'],['sharpen','sharp'],['invert','invert'],['orientation','or'],['minHeight','min-h'],['maxHeight','max-h'],['minWidth','min-w'],['maxWidth','max-w'],['quality','q'],['fit','fit'],['crop','crop'],['saturation','sat'],['auto','auto'],['dpr','dpr'],['pad','pad']];function urlForImage(options){var spec=_extends({},options||{});var source=spec.source;delete spec.source;var image=parseSource(source);if(!image){throw new Error(\"Unable to resolve image URL from source (\"+JSON.stringify(source)+\")\");}var id=image.asset._ref||image.asset._id||'';var asset=parseAssetId(id);// Compute crop rect in terms of pixel coordinates in the raw source image\nvar cropLeft=Math.round(image.crop.left*asset.width);var cropTop=Math.round(image.crop.top*asset.height);var crop={left:cropLeft,top:cropTop,width:Math.round(asset.width-image.crop.right*asset.width-cropLeft),height:Math.round(asset.height-image.crop.bottom*asset.height-cropTop)};// Compute hot spot rect in terms of pixel coordinates\nvar hotSpotVerticalRadius=image.hotspot.height*asset.height/2;var hotSpotHorizontalRadius=image.hotspot.width*asset.width/2;var hotSpotCenterX=image.hotspot.x*asset.width;var hotSpotCenterY=image.hotspot.y*asset.height;var hotspot={left:hotSpotCenterX-hotSpotHorizontalRadius,top:hotSpotCenterY-hotSpotVerticalRadius,right:hotSpotCenterX+hotSpotHorizontalRadius,bottom:hotSpotCenterY+hotSpotVerticalRadius};// If irrelevant, or if we are requested to: don't perform crop/fit based on\n// the crop/hotspot.\nif(!(spec.rect||spec.focalPoint||spec.ignoreImageParams||spec.crop)){spec=_extends({},spec,fit({crop:crop,hotspot:hotspot},spec));}return specToImageUrl(_extends({},spec,{asset:asset}));}// eslint-disable-next-line complexity\nfunction specToImageUrl(spec){var cdnUrl=(spec.baseUrl||'https://cdn.sanity.io').replace(/\\/+$/,'');var filename=spec.asset.id+\"-\"+spec.asset.width+\"x\"+spec.asset.height+\".\"+spec.asset.format;var baseUrl=cdnUrl+\"/images/\"+spec.projectId+\"/\"+spec.dataset+\"/\"+filename;var params=[];if(spec.rect){// Only bother url with a crop if it actually crops anything\nvar _spec$rect=spec.rect,left=_spec$rect.left,top=_spec$rect.top,width=_spec$rect.width,height=_spec$rect.height;var isEffectiveCrop=left!==0||top!==0||height!==spec.asset.height||width!==spec.asset.width;if(isEffectiveCrop){params.push(\"rect=\"+left+\",\"+top+\",\"+width+\",\"+height);}}if(spec.bg){params.push(\"bg=\"+spec.bg);}if(spec.focalPoint){params.push(\"fp-x=\"+spec.focalPoint.x);params.push(\"fp-y=\"+spec.focalPoint.y);}var flip=[spec.flipHorizontal&&'h',spec.flipVertical&&'v'].filter(Boolean).join('');if(flip){params.push(\"flip=\"+flip);}// Map from spec name to url param name, and allow using the actual param name as an alternative\nSPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function(mapping){var specName=mapping[0],param=mapping[1];if(typeof spec[specName]!=='undefined'){params.push(param+\"=\"+encodeURIComponent(spec[specName]));}else if(typeof spec[param]!=='undefined'){params.push(param+\"=\"+encodeURIComponent(spec[param]));}});if(params.length===0){return baseUrl;}return baseUrl+\"?\"+params.join('&');}function fit(source,spec){var cropRect;var imgWidth=spec.width;var imgHeight=spec.height;// If we are not constraining the aspect ratio, we'll just use the whole crop\nif(!(imgWidth&&imgHeight)){return{width:imgWidth,height:imgHeight,rect:source.crop};}var crop=source.crop;var hotspot=source.hotspot;// If we are here, that means aspect ratio is locked and fitting will be a bit harder\nvar desiredAspectRatio=imgWidth/imgHeight;var cropAspectRatio=crop.width/crop.height;if(cropAspectRatio>desiredAspectRatio){// The crop is wider than the desired aspect ratio. That means we are cutting from the sides\nvar height=Math.round(crop.height);var width=Math.round(height*desiredAspectRatio);var top=Math.max(0,Math.round(crop.top));// Center output horizontally over hotspot\nvar hotspotXCenter=Math.round((hotspot.right-hotspot.left)/2+hotspot.left);var left=Math.max(0,Math.round(hotspotXCenter-width/2));// Keep output within crop\nif(left<crop.left){left=crop.left;}else if(left+width>crop.left+crop.width){left=crop.left+crop.width-width;}cropRect={left:left,top:top,width:width,height:height};}else{// The crop is taller than the desired ratio, we are cutting from top and bottom\nvar _width=crop.width;var _height=Math.round(_width/desiredAspectRatio);var _left=Math.max(0,Math.round(crop.left));// Center output vertically over hotspot\nvar hotspotYCenter=Math.round((hotspot.bottom-hotspot.top)/2+hotspot.top);var _top=Math.max(0,Math.round(hotspotYCenter-_height/2));// Keep output rect within crop\nif(_top<crop.top){_top=crop.top;}else if(_top+_height>crop.top+crop.height){_top=crop.top+crop.height-_height;}cropRect={left:_left,top:_top,width:_width,height:_height};}return{width:imgWidth,height:imgHeight,rect:cropRect};}// For backwards-compatibility\nvar validFits=['clip','crop','fill','fillmax','max','scale','min'];var validCrops=['top','bottom','left','right','center','focalpoint','entropy'];var validAutoModes=['format'];function isSanityModernClientLike(client){return client&&'config'in client?typeof client.config==='function':false;}function isSanityClientLike(client){return client&&'clientConfig'in client?typeof client.clientConfig==='object':false;}function rewriteSpecName(key){var specs=SPEC_NAME_TO_URL_NAME_MAPPINGS;for(var _iterator=_createForOfIteratorHelperLoose(specs),_step;!(_step=_iterator()).done;){var entry=_step.value;var specName=entry[0],param=entry[1];if(key===specName||key===param){return specName;}}return key;}function urlBuilder(options){// Did we get a modernish client?\nif(isSanityModernClientLike(options)){// Inherit config from client\nvar _options$config=options.config(),apiUrl=_options$config.apiHost,projectId=_options$config.projectId,dataset=_options$config.dataset;var apiHost=apiUrl||'https://api.sanity.io';return new ImageUrlBuilder(null,{baseUrl:apiHost.replace(/^https:\\/\\/api\\./,'https://cdn.'),projectId:projectId,dataset:dataset});}// Did we get a SanityClient?\nvar client=options;if(isSanityClientLike(client)){// Inherit config from client\nvar _client$clientConfig=client.clientConfig,_apiUrl=_client$clientConfig.apiHost,_projectId=_client$clientConfig.projectId,_dataset=_client$clientConfig.dataset;var _apiHost=_apiUrl||'https://api.sanity.io';return new ImageUrlBuilder(null,{baseUrl:_apiHost.replace(/^https:\\/\\/api\\./,'https://cdn.'),projectId:_projectId,dataset:_dataset});}// Or just accept the options as given\nreturn new ImageUrlBuilder(null,options);}var ImageUrlBuilder=/*#__PURE__*/function(){function ImageUrlBuilder(parent,options){this.options=void 0;this.options=parent?_extends({},parent.options||{},options||{})// Merge parent options\n:_extends({},options||{});// Copy options\n}var _proto=ImageUrlBuilder.prototype;_proto.withOptions=function withOptions(options){var baseUrl=options.baseUrl||this.options.baseUrl;var newOptions={baseUrl:baseUrl};for(var key in options){if(options.hasOwnProperty(key)){var specKey=rewriteSpecName(key);newOptions[specKey]=options[key];}}return new ImageUrlBuilder(this,_extends({baseUrl:baseUrl},newOptions));}// The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n// _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n// studio, the 'image'-document must be provided.\n;_proto.image=function image(source){return this.withOptions({source:source});}// Specify the dataset\n;_proto.dataset=function dataset(_dataset2){return this.withOptions({dataset:_dataset2});}// Specify the projectId\n;_proto.projectId=function projectId(_projectId2){return this.withOptions({projectId:_projectId2});}// Specify background color\n;_proto.bg=function bg(_bg){return this.withOptions({bg:_bg});}// Set DPR scaling factor\n;_proto.dpr=function dpr(_dpr){// A DPR of 1 is the default - so only include it if we have a different value\nreturn this.withOptions(_dpr&&_dpr!==1?{dpr:_dpr}:{});}// Specify the width of the image in pixels\n;_proto.width=function width(_width){return this.withOptions({width:_width});}// Specify the height of the image in pixels\n;_proto.height=function height(_height){return this.withOptions({height:_height});}// Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n;_proto.focalPoint=function focalPoint(x,y){return this.withOptions({focalPoint:{x:x,y:y}});};_proto.maxWidth=function maxWidth(_maxWidth){return this.withOptions({maxWidth:_maxWidth});};_proto.minWidth=function minWidth(_minWidth){return this.withOptions({minWidth:_minWidth});};_proto.maxHeight=function maxHeight(_maxHeight){return this.withOptions({maxHeight:_maxHeight});};_proto.minHeight=function minHeight(_minHeight){return this.withOptions({minHeight:_minHeight});}// Specify width and height in pixels\n;_proto.size=function size(width,height){return this.withOptions({width:width,height:height});}// Specify blur between 0 and 100\n;_proto.blur=function blur(_blur){return this.withOptions({blur:_blur});};_proto.sharpen=function sharpen(_sharpen){return this.withOptions({sharpen:_sharpen});}// Specify the desired rectangle of the image\n;_proto.rect=function rect(left,top,width,height){return this.withOptions({rect:{left:left,top:top,width:width,height:height}});}// Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n;_proto.format=function format(_format){return this.withOptions({format:_format});};_proto.invert=function invert(_invert){return this.withOptions({invert:_invert});}// Rotation in degrees 0, 90, 180, 270\n;_proto.orientation=function orientation(_orientation){return this.withOptions({orientation:_orientation});}// Compression quality 0-100\n;_proto.quality=function quality(_quality){return this.withOptions({quality:_quality});}// Make it a download link. Parameter is default filename.\n;_proto.forceDownload=function forceDownload(download){return this.withOptions({download:download});}// Flip image horizontally\n;_proto.flipHorizontal=function flipHorizontal(){return this.withOptions({flipHorizontal:true});}// Flip image vertically\n;_proto.flipVertical=function flipVertical(){return this.withOptions({flipVertical:true});}// Ignore crop/hotspot from image record, even when present\n;_proto.ignoreImageParams=function ignoreImageParams(){return this.withOptions({ignoreImageParams:true});};_proto.fit=function fit(value){if(validFits.indexOf(value)===-1){throw new Error(\"Invalid fit mode \\\"\"+value+\"\\\"\");}return this.withOptions({fit:value});};_proto.crop=function crop(value){if(validCrops.indexOf(value)===-1){throw new Error(\"Invalid crop mode \\\"\"+value+\"\\\"\");}return this.withOptions({crop:value});}// Saturation\n;_proto.saturation=function saturation(_saturation){return this.withOptions({saturation:_saturation});};_proto.auto=function auto(value){if(validAutoModes.indexOf(value)===-1){throw new Error(\"Invalid auto mode \\\"\"+value+\"\\\"\");}return this.withOptions({auto:value});}// Specify the number of pixels to pad the image\n;_proto.pad=function pad(_pad){return this.withOptions({pad:_pad});}// Gets the url based on the submitted parameters\n;_proto.url=function url(){return urlForImage(this.options);}// Alias for url()\n;_proto.toString=function toString(){return this.url();};return ImageUrlBuilder;}();return urlBuilder;});","map":{"version":3,"names":["example","parseAssetId","ref","_ref$split","split","id","dimensionString","format","Error","_dimensionString$spli","imgWidthStr","imgHeightStr","width","height","isValidAssetId","isFinite","isRef","src","source","_ref","isAsset","_id","isAssetStub","asset","url","parseSource","image","isUrl","urlToId","_extends","img","crop","hotspot","applyDefaults","test","parts","slice","replace","result","left","top","bottom","right","x","y","SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","JSON","stringify","cropLeft","Math","round","cropTop","hotSpotVerticalRadius","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","filename","projectId","dataset","params","_spec$rect","isEffectiveCrop","push","bg","flip","flipHorizontal","flipVertical","filter","Boolean","join","forEach","mapping","specName","param","encodeURIComponent","length","cropRect","imgWidth","imgHeight","desiredAspectRatio","cropAspectRatio","max","hotspotXCenter","_width","_height","_left","hotspotYCenter","_top","validFits","validCrops","validAutoModes","isSanityModernClientLike","client","config","isSanityClientLike","clientConfig","rewriteSpecName","key","specs","_iterator","_createForOfIteratorHelperLoose","_step","done","entry","value","urlBuilder","_options$config","apiUrl","apiHost","ImageUrlBuilder","_client$clientConfig","_apiUrl","_projectId","_dataset","_apiHost","parent","_proto","prototype","withOptions","newOptions","hasOwnProperty","specKey","_dataset2","_projectId2","_bg","dpr","_dpr","maxWidth","_maxWidth","minWidth","_minWidth","maxHeight","_maxHeight","minHeight","_minHeight","size","blur","_blur","sharpen","_sharpen","_format","invert","_invert","orientation","_orientation","quality","_quality","forceDownload","download","indexOf","saturation","_saturation","auto","pad","_pad","toString"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/@sanity/image-url/src/parseAssetId.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/@sanity/image-url/src/parseSource.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/@sanity/image-url/src/urlForImage.ts","/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/@sanity/image-url/src/builder.ts"],"sourcesContent":["const example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg'\n\nexport default function parseAssetId(ref: string) {\n  const [, id, dimensionString, format] = ref.split('-')\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  const [imgWidthStr, imgHeightStr] = dimensionString.split('x')\n\n  const width = +imgWidthStr\n  const height = +imgHeightStr\n\n  const isValidAssetId = isFinite(width) && isFinite(height)\n  if (!isValidAssetId) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  return {id, width, height, format}\n}\n","import {\n  SanityAsset,\n  SanityImageObject,\n  SanityImageSource,\n  SanityImageWithAssetStub,\n  SanityReference,\n} from './types'\n\nconst isRef = (src: SanityImageSource): src is SanityReference => {\n  const source = src as SanityReference\n  return source ? typeof source._ref === 'string' : false\n}\n\nconst isAsset = (src: SanityImageSource): src is SanityAsset => {\n  const source = src as SanityAsset\n  return source ? typeof source._id === 'string' : false\n}\n\nconst isAssetStub = (src: SanityImageSource): src is SanityImageWithAssetStub => {\n  const source = src as SanityImageWithAssetStub\n  return source && source.asset ? typeof source.asset.url === 'string' : false\n}\n\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nexport default function parseSource(source?: SanityImageSource) {\n  if (!source) {\n    return null\n  }\n\n  let image: SanityImageObject\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {_ref: urlToId(source)},\n    }\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {_ref: source},\n    }\n  } else if (isRef(source)) {\n    // We just got passed an asset directly\n    image = {\n      asset: source,\n    }\n  } else if (isAsset(source)) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id || '',\n      },\n    }\n  } else if (isAssetStub(source)) {\n    // If we were passed a partial asset (`url`, but no `_id`)\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url),\n      },\n    }\n  } else if (typeof source.asset === 'object') {\n    // Probably an actual image with materialized asset\n    image = {...source}\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null\n  }\n\n  const img = source as SanityImageObject\n  if (img.crop) {\n    image.crop = img.crop\n  }\n\n  if (img.hotspot) {\n    image.hotspot = img.hotspot\n  }\n\n  return applyDefaults(image)\n}\n\nfunction isUrl(url: string) {\n  return /^https?:\\/\\//.test(`${url}`)\n}\n\nfunction urlToId(url: string) {\n  const parts = url.split('/').slice(-1)\n  return `image-${parts[0]}`.replace(/\\.([a-z]+)$/, '-$1')\n}\n\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image: SanityImageObject) {\n  if (image.crop && image.hotspot) {\n    return image as Required<SanityImageObject>\n  }\n\n  // We need to pad in default values for crop or hotspot\n  const result = {...image}\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0,\n    }\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0,\n    }\n  }\n\n  return result as Required<SanityImageObject>\n}\n","import parseAssetId from './parseAssetId'\nimport parseSource from './parseSource'\nimport {\n  CropSpec,\n  HotspotSpec,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAsset,\n  SanityAsset,\n  SanityImageFitResult,\n  SanityImageRect,\n  SanityReference,\n} from './types'\n\nexport const SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n  ['width', 'w'],\n  ['height', 'h'],\n  ['format', 'fm'],\n  ['download', 'dl'],\n  ['blur', 'blur'],\n  ['sharpen', 'sharp'],\n  ['invert', 'invert'],\n  ['orientation', 'or'],\n  ['minHeight', 'min-h'],\n  ['maxHeight', 'max-h'],\n  ['minWidth', 'min-w'],\n  ['maxWidth', 'max-w'],\n  ['quality', 'q'],\n  ['fit', 'fit'],\n  ['crop', 'crop'],\n  ['saturation', 'sat'],\n  ['auto', 'auto'],\n  ['dpr', 'dpr'],\n  ['pad', 'pad'],\n]\n\nexport default function urlForImage(options: ImageUrlBuilderOptions): string {\n  let spec = {...(options || {})}\n  const source = spec.source\n  delete spec.source\n\n  const image = parseSource(source)\n  if (!image) {\n    throw new Error(`Unable to resolve image URL from source (${JSON.stringify(source)})`)\n  }\n\n  const id = (image.asset as SanityReference)._ref || (image.asset as SanityAsset)._id || ''\n  const asset = parseAssetId(id)\n\n  // Compute crop rect in terms of pixel coordinates in the raw source image\n  const cropLeft = Math.round(image.crop.left * asset.width)\n  const cropTop = Math.round(image.crop.top * asset.height)\n  const crop = {\n    left: cropLeft,\n    top: cropTop,\n    width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n    height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n  }\n\n  // Compute hot spot rect in terms of pixel coordinates\n  const hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2\n  const hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2\n  const hotSpotCenterX = image.hotspot.x * asset.width\n  const hotSpotCenterY = image.hotspot.y * asset.height\n  const hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius,\n  }\n\n  // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = {...spec, ...fit({crop, hotspot}, spec)}\n  }\n\n  return specToImageUrl({...spec, asset})\n}\n\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec: ImageUrlBuilderOptionsWithAsset) {\n  const cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '')\n  const filename = `${spec.asset.id}-${spec.asset.width}x${spec.asset.height}.${spec.asset.format}`\n  const baseUrl = `${cdnUrl}/images/${spec.projectId}/${spec.dataset}/${filename}`\n\n  const params = []\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    const {left, top, width, height} = spec.rect\n    const isEffectiveCrop =\n      left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width\n\n    if (isEffectiveCrop) {\n      params.push(`rect=${left},${top},${width},${height}`)\n    }\n  }\n\n  if (spec.bg) {\n    params.push(`bg=${spec.bg}`)\n  }\n\n  if (spec.focalPoint) {\n    params.push(`fp-x=${spec.focalPoint.x}`)\n    params.push(`fp-y=${spec.focalPoint.y}`)\n  }\n\n  const flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('')\n  if (flip) {\n    params.push(`flip=${flip}`)\n  }\n\n  // Map from spec name to url param name, and allow using the actual param name as an alternative\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach((mapping) => {\n    const [specName, param] = mapping\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[specName])}`)\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[param])}`)\n    }\n  })\n\n  if (params.length === 0) {\n    return baseUrl\n  }\n\n  return `${baseUrl}?${params.join('&')}`\n}\n\nfunction fit(\n  source: {crop: CropSpec; hotspot: HotspotSpec},\n  spec: ImageUrlBuilderOptions\n): SanityImageFitResult {\n  let cropRect: SanityImageRect\n\n  const imgWidth = spec.width\n  const imgHeight = spec.height\n\n  // If we are not constraining the aspect ratio, we'll just use the whole crop\n  if (!(imgWidth && imgHeight)) {\n    return {width: imgWidth, height: imgHeight, rect: source.crop}\n  }\n\n  const crop = source.crop\n  const hotspot = source.hotspot\n\n  // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n  const desiredAspectRatio = imgWidth / imgHeight\n  const cropAspectRatio = crop.width / crop.height\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    const height = Math.round(crop.height)\n    const width = Math.round(height * desiredAspectRatio)\n    const top = Math.max(0, Math.round(crop.top))\n\n    // Center output horizontally over hotspot\n    const hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left)\n    let left = Math.max(0, Math.round(hotspotXCenter - width / 2))\n\n    // Keep output within crop\n    if (left < crop.left) {\n      left = crop.left\n    } else if (left + width > crop.left + crop.width) {\n      left = crop.left + crop.width - width\n    }\n\n    cropRect = {left, top, width, height}\n  } else {\n    // The crop is taller than the desired ratio, we are cutting from top and bottom\n    const width = crop.width\n    const height = Math.round(width / desiredAspectRatio)\n    const left = Math.max(0, Math.round(crop.left))\n\n    // Center output vertically over hotspot\n    const hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top)\n    let top = Math.max(0, Math.round(hotspotYCenter - height / 2))\n\n    // Keep output rect within crop\n    if (top < crop.top) {\n      top = crop.top\n    } else if (top + height > crop.top + crop.height) {\n      top = crop.top + crop.height - height\n    }\n\n    cropRect = {left, top, width, height}\n  }\n\n  return {\n    width: imgWidth,\n    height: imgHeight,\n    rect: cropRect,\n  }\n}\n\n// For backwards-compatibility\nexport {parseSource}\n","import {\n  AutoMode,\n  CropMode,\n  FitMode,\n  ImageFormat,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAliases,\n  SanityModernClientLike,\n  Orientation,\n  SanityClientLike,\n  SanityImageSource,\n  SanityProjectDetails,\n} from './types'\nimport urlForImage, {SPEC_NAME_TO_URL_NAME_MAPPINGS} from './urlForImage'\n\nconst validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min']\nconst validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy']\nconst validAutoModes = ['format']\n\nfunction isSanityModernClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityModernClientLike {\n  return client && 'config' in client ? typeof client.config === 'function' : false\n}\n\nfunction isSanityClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityClientLike {\n  return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false\n}\n\nfunction rewriteSpecName(key: string) {\n  const specs = SPEC_NAME_TO_URL_NAME_MAPPINGS\n  for (const entry of specs) {\n    const [specName, param] = entry\n    if (key === specName || key === param) {\n      return specName\n    }\n  }\n\n  return key\n}\n\nexport default function urlBuilder(\n  options?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n) {\n  // Did we get a modernish client?\n  if (isSanityModernClientLike(options)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = options.config()\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Did we get a SanityClient?\n  const client = options as SanityClientLike\n  if (isSanityClientLike(client)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = client.clientConfig\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Or just accept the options as given\n  return new ImageUrlBuilder(null, options as ImageUrlBuilderOptions)\n}\n\nexport class ImageUrlBuilder {\n  public options: ImageUrlBuilderOptions\n\n  constructor(parent: ImageUrlBuilder | null, options: ImageUrlBuilderOptions) {\n    this.options = parent\n      ? {...(parent.options || {}), ...(options || {})} // Merge parent options\n      : {...(options || {})} // Copy options\n  }\n\n  withOptions(options: Partial<ImageUrlBuilderOptionsWithAliases>) {\n    const baseUrl = options.baseUrl || this.options.baseUrl\n\n    const newOptions: {[key: string]: any} = {baseUrl}\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        const specKey = rewriteSpecName(key)\n        newOptions[specKey] = options[key]\n      }\n    }\n\n    return new ImageUrlBuilder(this, {baseUrl, ...newOptions})\n  }\n\n  // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n  // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n  // studio, the 'image'-document must be provided.\n  image(source: SanityImageSource) {\n    return this.withOptions({source})\n  }\n\n  // Specify the dataset\n  dataset(dataset: string) {\n    return this.withOptions({dataset})\n  }\n\n  // Specify the projectId\n  projectId(projectId: string) {\n    return this.withOptions({projectId})\n  }\n\n  // Specify background color\n  bg(bg: string) {\n    return this.withOptions({bg})\n  }\n\n  // Set DPR scaling factor\n  dpr(dpr: number) {\n    // A DPR of 1 is the default - so only include it if we have a different value\n    return this.withOptions(dpr && dpr !== 1 ? {dpr} : {})\n  }\n\n  // Specify the width of the image in pixels\n  width(width: number) {\n    return this.withOptions({width})\n  }\n\n  // Specify the height of the image in pixels\n  height(height: number) {\n    return this.withOptions({height})\n  }\n\n  // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n  focalPoint(x: number, y: number) {\n    return this.withOptions({focalPoint: {x, y}})\n  }\n\n  maxWidth(maxWidth: number) {\n    return this.withOptions({maxWidth})\n  }\n\n  minWidth(minWidth: number) {\n    return this.withOptions({minWidth})\n  }\n\n  maxHeight(maxHeight: number) {\n    return this.withOptions({maxHeight})\n  }\n\n  minHeight(minHeight: number) {\n    return this.withOptions({minHeight})\n  }\n\n  // Specify width and height in pixels\n  size(width: number, height: number) {\n    return this.withOptions({width, height})\n  }\n\n  // Specify blur between 0 and 100\n  blur(blur: number) {\n    return this.withOptions({blur})\n  }\n\n  sharpen(sharpen: number) {\n    return this.withOptions({sharpen})\n  }\n\n  // Specify the desired rectangle of the image\n  rect(left: number, top: number, width: number, height: number) {\n    return this.withOptions({rect: {left, top, width, height}})\n  }\n\n  // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n  format(format: ImageFormat) {\n    return this.withOptions({format})\n  }\n\n  invert(invert: boolean) {\n    return this.withOptions({invert})\n  }\n\n  // Rotation in degrees 0, 90, 180, 270\n  orientation(orientation: Orientation) {\n    return this.withOptions({orientation})\n  }\n\n  // Compression quality 0-100\n  quality(quality: number) {\n    return this.withOptions({quality})\n  }\n\n  // Make it a download link. Parameter is default filename.\n  forceDownload(download: boolean | string) {\n    return this.withOptions({download})\n  }\n\n  // Flip image horizontally\n  flipHorizontal() {\n    return this.withOptions({flipHorizontal: true})\n  }\n\n  // Flip image vertically\n  flipVertical() {\n    return this.withOptions({flipVertical: true})\n  }\n\n  // Ignore crop/hotspot from image record, even when present\n  ignoreImageParams() {\n    return this.withOptions({ignoreImageParams: true})\n  }\n\n  fit(value: FitMode) {\n    if (validFits.indexOf(value) === -1) {\n      throw new Error(`Invalid fit mode \"${value}\"`)\n    }\n\n    return this.withOptions({fit: value})\n  }\n\n  crop(value: CropMode) {\n    if (validCrops.indexOf(value) === -1) {\n      throw new Error(`Invalid crop mode \"${value}\"`)\n    }\n\n    return this.withOptions({crop: value})\n  }\n\n  // Saturation\n  saturation(saturation: number) {\n    return this.withOptions({saturation})\n  }\n\n  auto(value: AutoMode) {\n    if (validAutoModes.indexOf(value) === -1) {\n      throw new Error(`Invalid auto mode \"${value}\"`)\n    }\n\n    return this.withOptions({auto: value})\n  }\n\n  // Specify the number of pixels to pad the image\n  pad(pad: number) {\n    return this.withOptions({pad})\n  }\n\n  // Gets the url based on the submitted parameters\n  url() {\n    return urlForImage(this.options)\n  }\n\n  // Alias for url()\n  toString() {\n    return this.url()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}