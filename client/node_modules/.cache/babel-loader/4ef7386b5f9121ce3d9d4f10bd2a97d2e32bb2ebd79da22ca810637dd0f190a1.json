{"ast":null,"code":"import{EmptyError}from'../util/EmptyError';import{filter}from'./filter';import{takeLast}from'./takeLast';import{throwIfEmpty}from'./throwIfEmpty';import{defaultIfEmpty}from'./defaultIfEmpty';import{identity}from'../util/identity';export function last(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter(function(v,i){return predicate(v,i,source);}):identity,takeLast(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty(function(){return new EmptyError();}));};}","map":{"version":3,"names":["EmptyError","filter","takeLast","throwIfEmpty","defaultIfEmpty","identity","last","predicate","defaultValue","hasDefaultValue","arguments","length","source","pipe","v","i"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/operators/last.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n"],"mappings":"AACA,OAASA,UAAU,KAAQ,oBAAoB,CAE/C,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,YAAY,KAAQ,gBAAgB,CAC7C,OAASC,cAAc,KAAQ,kBAAkB,CACjD,OAASC,QAAQ,KAAQ,kBAAkB,CAuE3C,MAAM,SAAU,CAAAC,IAAIA,CAClBC,SAAgF,CAChFC,YAAgB,EAEhB,GAAM,CAAAC,eAAe,CAAGC,SAAS,CAACC,MAAM,EAAI,CAAC,CAC7C,MAAO,UAACC,MAAqB,EAC3B,OAAAA,MAAM,CAACC,IAAI,CACTN,SAAS,CAAGN,MAAM,CAAC,SAACa,CAAC,CAAEC,CAAC,EAAK,OAAAR,SAAS,CAACO,CAAC,CAAEC,CAAC,CAAEH,MAAM,CAAC,CAAvB,CAAuB,CAAC,CAAGP,QAAQ,CAChEH,QAAQ,CAAC,CAAC,CAAC,CACXO,eAAe,CAAGL,cAAc,CAACI,YAAa,CAAC,CAAGL,YAAY,CAAC,WAAM,UAAI,CAAAH,UAAU,EAAE,CAAhB,CAAgB,CAAC,CACvF,CAJD,CAIC,CACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}