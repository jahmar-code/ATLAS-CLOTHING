{"ast":null,"code":"import{__read,__spreadArray}from\"tslib\";export var intervalProvider={setInterval:function(_setInterval){function setInterval(_x,_x2){return _setInterval.apply(this,arguments);}setInterval.toString=function(){return _setInterval.toString();};return setInterval;}(function(handler,timeout){var args=[];for(var _i=2;_i<arguments.length;_i++){args[_i-2]=arguments[_i];}var delegate=intervalProvider.delegate;if(delegate===null||delegate===void 0?void 0:delegate.setInterval){return delegate.setInterval.apply(delegate,__spreadArray([handler,timeout],__read(args)));}return setInterval.apply(void 0,__spreadArray([handler,timeout],__read(args)));}),clearInterval:function(_clearInterval){function clearInterval(_x3){return _clearInterval.apply(this,arguments);}clearInterval.toString=function(){return _clearInterval.toString();};return clearInterval;}(function(handle){var delegate=intervalProvider.delegate;return((delegate===null||delegate===void 0?void 0:delegate.clearInterval)||clearInterval)(handle);}),delegate:undefined};","map":{"version":3,"names":["intervalProvider","setInterval","_setInterval","_x","_x2","apply","arguments","toString","handler","timeout","args","_i","length","delegate","__spreadArray","__read","clearInterval","_clearInterval","_x3","handle","undefined"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts"],"sourcesContent":["import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n"],"mappings":"wCAeA,MAAO,IAAM,CAAAA,gBAAgB,CAAqB,CAGhDC,WAAW,UAAAC,YAAA,WAAAD,YAAAE,EAAA,CAAAC,GAAA,SAAAF,YAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAL,WAAA,CAAAM,QAAA,mBAAAL,YAAA,CAAAK,QAAA,YAAAN,WAAA,GAAX,SAAYO,OAAmB,CAAEC,OAAgB,EAAE,IAAAC,IAAA,I,IAAA,IAAAC,EAAA,EAAO,CAAPA,EAAA,CAAAL,SAAA,CAAAM,MAAO,CAAPD,EAAA,EAAO,EAAPD,IAAA,CAAAC,EAAA,IAAAL,SAAA,CAAAK,EAAA,E,CACzC,IAAAE,QAAQ,CAAKb,gBAAgB,CAAAa,QAArB,CAChB,GAAIA,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEZ,WAAW,CAAE,CACzB,MAAO,CAAAY,QAAQ,CAACZ,WAAW,CAAAI,KAAA,CAApBQ,QAAQ,CAAAC,aAAA,EAAaN,OAAO,CAAEC,OAAO,EAAAM,MAAA,CAAKL,IAAI,I,CAEvD,MAAO,CAAAT,WAAW,CAAAI,KAAA,QAAAS,aAAA,EAACN,OAAO,CAAEC,OAAO,EAAAM,MAAA,CAAKL,IAAI,IAC9C,CAAC,EACDM,aAAa,UAAAC,cAAA,WAAAD,cAAAE,GAAA,SAAAD,cAAA,CAAAZ,KAAA,MAAAC,SAAA,GAAAU,aAAA,CAAAT,QAAA,mBAAAU,cAAA,CAAAV,QAAA,YAAAS,aAAA,GAAb,SAAcG,MAAM,EACV,IAAAN,QAAQ,CAAKb,gBAAgB,CAAAa,QAArB,CAChB,MAAO,CAAC,CAAAA,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEG,aAAa,GAAIA,aAAa,EAAEG,MAAa,CAAC,CAClE,CAAC,EACDN,QAAQ,CAAEO,S,CACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}