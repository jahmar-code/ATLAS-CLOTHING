{"ast":null,"code":"import{__extends}from\"tslib\";import{Action}from'./Action';import{intervalProvider}from'./intervalProvider';import{arrRemove}from'../util/arrRemove';var AsyncAction=function(_super){__extends(AsyncAction,_super);function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;_this.pending=false;return _this;}AsyncAction.prototype.schedule=function(state,delay){var _a;if(delay===void 0){delay=0;}if(this.closed){return this;}this.state=state;var id=this.id;var scheduler=this.scheduler;if(id!=null){this.id=this.recycleAsyncId(scheduler,id,delay);}this.pending=true;this.delay=delay;this.id=(_a=this.id)!==null&&_a!==void 0?_a:this.requestAsyncId(scheduler,this.id,delay);return this;};AsyncAction.prototype.requestAsyncId=function(scheduler,_id,delay){if(delay===void 0){delay=0;}return intervalProvider.setInterval(scheduler.flush.bind(scheduler,this),delay);};AsyncAction.prototype.recycleAsyncId=function(_scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!=null&&this.delay===delay&&this.pending===false){return id;}if(id!=null){intervalProvider.clearInterval(id);}return undefined;};AsyncAction.prototype.execute=function(state,delay){if(this.closed){return new Error('executing a cancelled action');}this.pending=false;var error=this._execute(state,delay);if(error){return error;}else if(this.pending===false&&this.id!=null){this.id=this.recycleAsyncId(this.scheduler,this.id,null);}};AsyncAction.prototype._execute=function(state,_delay){var errored=false;var errorValue;try{this.work(state);}catch(e){errored=true;errorValue=e?e:new Error('Scheduled action threw falsy error');}if(errored){this.unsubscribe();return errorValue;}};AsyncAction.prototype.unsubscribe=function(){if(!this.closed){var _a=this,id=_a.id,scheduler=_a.scheduler;var actions=scheduler.actions;this.work=this.state=this.scheduler=null;this.pending=false;arrRemove(actions,this);if(id!=null){this.id=this.recycleAsyncId(scheduler,id,null);}this.delay=null;_super.prototype.unsubscribe.call(this);}};return AsyncAction;}(Action);export{AsyncAction};","map":{"version":3,"names":["Action","intervalProvider","arrRemove","AsyncAction","_super","__extends","scheduler","work","_this","call","pending","prototype","schedule","state","delay","closed","id","recycleAsyncId","_a","requestAsyncId","_id","setInterval","flush","bind","_scheduler","clearInterval","undefined","execute","Error","error","_execute","_delay","errored","errorValue","e","unsubscribe","actions"],"sources":["/Users/jawaadahmar/Desktop/atlas-clothing/client/src/thistle-lion/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts"],"sourcesContent":["import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}